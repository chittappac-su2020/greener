{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Jobs/pay.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport scriptLoader from 'react-async-script-loader';\n\nclass PaypalButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showButton: false\n    };\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          isScriptLoaded = _this$props.isScriptLoaded,\n          isScriptLoadSucceed = _this$props.isScriptLoadSucceed;\n\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      this.setState({\n        showButton: true\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const isScriptLoaded = nextProps.isScriptLoaded,\n          isScriptLoadSucceed = nextProps.isScriptLoadSucceed;\n    const isLoadedButWasntLoadedBefore = !this.state.showButton && !this.props.isScriptLoaded && isScriptLoaded;\n\n    if (isLoadedButWasntLoadedBefore) {\n      if (isScriptLoadSucceed) {\n        this.setState({\n          showButton: true\n        });\n      }\n    }\n  }\n\n  render() {\n    const paypal = window.PAYPAL;\n    const _this$props2 = this.props,\n          total = _this$props2.total,\n          currency = _this$props2.currency,\n          env = _this$props2.env,\n          commit = _this$props2.commit,\n          client = _this$props2.client,\n          onSuccess = _this$props2.onSuccess,\n          onError = _this$props2.onError,\n          onCancel = _this$props2.onCancel;\n    const showButton = this.state.showButton;\n\n    const payment = () => paypal.rest.payment.create(env, client, {\n      transactions: [{\n        amount: {\n          total,\n          currency\n        }\n      }]\n    });\n\n    const onAuthorize = (data, actions) => actions.payment.execute().then(() => {\n      const payment = {\n        paid: true,\n        cancelled: false,\n        payerID: data.payerID,\n        paymentID: data.paymentID,\n        paymentToken: data.paymentToken,\n        returnUrl: data.returnUrl\n      };\n      console.log(\"in paypal\");\n      console.log(payment);\n      onSuccess(payment);\n    });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, showButton && React.createElement(paypal.Button.react, {\n      env: env,\n      client: client,\n      commit: commit,\n      payment: payment,\n      onAuthorize: onAuthorize,\n      onCancel: onCancel,\n      onError: onError,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);","map":{"version":3,"sources":["/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Jobs/pay.js"],"names":["React","ReactDOM","scriptLoader","PaypalButton","Component","constructor","props","state","showButton","window","componentDidMount","isScriptLoaded","isScriptLoadSucceed","setState","componentWillReceiveProps","nextProps","isLoadedButWasntLoadedBefore","render","paypal","PAYPAL","total","currency","env","commit","client","onSuccess","onError","onCancel","payment","rest","create","transactions","amount","onAuthorize","data","actions","execute","then","paid","cancelled","payerID","paymentID","paymentToken","returnUrl","console","log"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport scriptLoader from 'react-async-script-loader';\nclass PaypalButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showButton: false,\n    };\n    window.React = React;\n    window.ReactDOM = ReactDOM;\n  }\n  componentDidMount() {\n    const {\n      isScriptLoaded,\n      isScriptLoadSucceed\n    } = this.props;\n    if (isScriptLoaded && isScriptLoadSucceed) {\n      this.setState({ showButton: true });\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      isScriptLoaded,\n      isScriptLoadSucceed,\n    } = nextProps;\n    const isLoadedButWasntLoadedBefore =\n      !this.state.showButton &&\n      !this.props.isScriptLoaded &&\n      isScriptLoaded;\n    if (isLoadedButWasntLoadedBefore) {\n      if (isScriptLoadSucceed) {\n        this.setState({ showButton: true });\n      }\n    }\n  }\n   \n  render() {\n    const paypal = window.PAYPAL;\n    const {\n      total,\n      currency,\n      env,\n      commit,\n      client,\n      onSuccess,\n      onError,\n      onCancel,\n    } = this.props;\n    const {\n      showButton,\n    } = this.state;\n    const payment = () =>\n      paypal.rest.payment.create(env, client, {\n        transactions: [\n          {\n            amount: {\n              total,\n              currency,\n            }\n          },\n        ],\n      });\n    const onAuthorize = (data, actions) =>\n      actions.payment.execute()\n        .then(() => {\n          const payment = {\n            paid: true,\n            cancelled: false,\n            payerID: data.payerID,\n            paymentID: data.paymentID,\n            paymentToken: data.paymentToken,\n            returnUrl: data.returnUrl,\n          };\n          console.log(\"in paypal\")\n          console.log(payment);\n          onSuccess(payment);\n        });\n    return (\n      <div>\n        {showButton && <paypal.Button.react\n          env={env}\n          client={client}\n          commit={commit}\n          payment={payment}\n          onAuthorize={onAuthorize}\n          onCancel={onCancel}\n          onError={onError}\n        />}\n      </div>\n    );\n  }\n\n \n}\nexport default scriptLoader('https://www.paypalobjects.com/api/checkout.js')(PaypalButton);"]},"metadata":{},"sourceType":"module"}