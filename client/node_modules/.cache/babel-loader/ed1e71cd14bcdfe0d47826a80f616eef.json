{"ast":null,"code":"'use strict';\n\nvar PropTypes = require('prop-types');\n\nvar React = require('react');\n\nvar createReactClass = require('create-react-class');\n\nvar d3 = require('d3');\n\nvar VoronoiCircleContainer = require('./VoronoiCircleContainer');\n\nmodule.exports = createReactClass({\n  displayName: 'DataSeries',\n  propTypes: {\n    circleRadius: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    colors: PropTypes.func.isRequired,\n    colorAccessor: PropTypes.func.isRequired,\n    data: PropTypes.array.isRequired,\n    height: PropTypes.number.isRequired,\n    xAccessor: PropTypes.func.isRequired,\n    xScale: PropTypes.func.isRequired,\n    yAccessor: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      className: 'rd3-scatterchart-dataseries'\n    };\n  },\n  render: function render() {\n    var props = this.props;\n    var xScale = props.xScale;\n    var yScale = props.yScale;\n    var xAccessor = props.xAccessor;\n    var yAccessor = props.yAccessor;\n    var voronoi = d3.geom.voronoi().x(function (d) {\n      return xScale(d.coord.x);\n    }).y(function (d) {\n      return yScale(d.coord.y);\n    }).clipExtent([[0, 0], [props.width, props.height]]);\n    var regions = voronoi(props.data).map(function (vnode, idx) {\n      var point = vnode.point;\n      var coord = point.coord;\n      var x = xAccessor(coord);\n      var y = yAccessor(coord); // The circle coordinates\n\n      var cx = void 0;\n      var cy = void 0;\n\n      if (Object.prototype.toString.call(x) === '[object Date]') {\n        cx = xScale(x.getTime());\n      } else {\n        cx = xScale(x);\n      }\n\n      if (Object.prototype.toString.call(y) === '[object Date]') {\n        cy = yScale(y.getTime());\n      } else {\n        cy = yScale(y);\n      }\n\n      return React.createElement(VoronoiCircleContainer, {\n        key: idx,\n        circleFill: props.colors(props.colorAccessor(point.d, point.seriesIndex)),\n        circleRadius: props.circleRadius,\n        cx: cx,\n        cy: cy,\n        vnode: vnode,\n        onMouseOver: props.onMouseOver,\n        dataPoint: {\n          xValue: x,\n          yValue: y,\n          seriesName: point.series.name\n        }\n      });\n    });\n    return React.createElement('g', {\n      className: props.className\n    }, regions);\n  }\n});","map":{"version":3,"sources":["/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/node_modules/rd3/build/cjs/scatterchart/DataSeries.js"],"names":["PropTypes","require","React","createReactClass","d3","VoronoiCircleContainer","module","exports","displayName","propTypes","circleRadius","number","isRequired","className","string","colors","func","colorAccessor","data","array","height","xAccessor","xScale","yAccessor","yScale","getDefaultProps","render","props","voronoi","geom","x","d","coord","y","clipExtent","width","regions","map","vnode","idx","point","cx","cy","Object","prototype","toString","call","getTime","createElement","key","circleFill","seriesIndex","onMouseOver","dataPoint","xValue","yValue","seriesName","series","name"],"mappings":"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","sourcesContent":["'use strict';\n\nvar PropTypes = require('prop-types');\nvar React = require('react');\nvar createReactClass = require('create-react-class');\n\nvar d3 = require('d3');\nvar VoronoiCircleContainer = require('./VoronoiCircleContainer');\n\nmodule.exports = createReactClass({\n\n  displayName: 'DataSeries',\n\n  propTypes: {\n    circleRadius: PropTypes.number.isRequired,\n    className: PropTypes.string,\n    colors: PropTypes.func.isRequired,\n    colorAccessor: PropTypes.func.isRequired,\n    data: PropTypes.array.isRequired,\n    height: PropTypes.number.isRequired,\n    xAccessor: PropTypes.func.isRequired,\n    xScale: PropTypes.func.isRequired,\n    yAccessor: PropTypes.func.isRequired,\n    yScale: PropTypes.func.isRequired\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      className: 'rd3-scatterchart-dataseries'\n    };\n  },\n  render: function render() {\n    var props = this.props;\n    var xScale = props.xScale;\n    var yScale = props.yScale;\n    var xAccessor = props.xAccessor;\n    var yAccessor = props.yAccessor;\n\n    var voronoi = d3.geom.voronoi().x(function (d) {\n      return xScale(d.coord.x);\n    }).y(function (d) {\n      return yScale(d.coord.y);\n    }).clipExtent([[0, 0], [props.width, props.height]]);\n\n    var regions = voronoi(props.data).map(function (vnode, idx) {\n      var point = vnode.point;\n      var coord = point.coord;\n\n      var x = xAccessor(coord);\n      var y = yAccessor(coord);\n\n      // The circle coordinates\n      var cx = void 0;\n      var cy = void 0;\n\n      if (Object.prototype.toString.call(x) === '[object Date]') {\n        cx = xScale(x.getTime());\n      } else {\n        cx = xScale(x);\n      }\n\n      if (Object.prototype.toString.call(y) === '[object Date]') {\n        cy = yScale(y.getTime());\n      } else {\n        cy = yScale(y);\n      }\n\n      return React.createElement(VoronoiCircleContainer, {\n        key: idx,\n        circleFill: props.colors(props.colorAccessor(point.d, point.seriesIndex)),\n        circleRadius: props.circleRadius,\n        cx: cx,\n        cy: cy,\n        vnode: vnode,\n        onMouseOver: props.onMouseOver,\n        dataPoint: { xValue: x, yValue: y, seriesName: point.series.name }\n      });\n    });\n\n    return React.createElement(\n      'g',\n      {\n        className: props.className\n      },\n      regions\n    );\n  }\n});"]},"metadata":{},"sourceType":"script"}