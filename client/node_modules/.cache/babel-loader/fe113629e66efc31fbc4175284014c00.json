{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Services/Garbage.js\";\nimport React from 'react';\nimport './Services.css';\nimport PropTypes from \"prop-types\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"react-bootstrap\";\nimport { submitGarbageData } from \"../../actions/garbageActions\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nconst mapStyles = {\n  width: '80%',\n  height: '80%',\n  marginLeft: '-15px'\n};\n\nclass Garbage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.buttonSet = type => {\n      if (type === \"pickup\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"11AM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"11AM\"), React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"3PM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"3PM\"));\n      } else if (type === \"dropoff\") {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"10AM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, \"10AM\"), React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"3PM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, \"3PM\"), React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"7PM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"7PM\"));\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.wasteType != \"\" && this.state.weight != \"\") {\n        const gData = {\n          userid: this.props.auth.user.id,\n          wasteType: this.state.wasteType,\n          weight: this.state.weight\n        };\n        this.props.submitGarbageData(gData);\n        this.setState({\n          wasteType: '',\n          weight: '',\n          alertS: true\n        });\n      } else {\n        this.setState({\n          alertF: true\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case \"wasteType\":\n          //formErrors.month =  value.length > 0 ? \"\" : \"Waste type cannot be empty\";\n          this.setState({\n            wasteType: event.target.value\n          });\n          break;\n\n        case \"weight\":\n          // formErrors.year = value.length > 0 ? \"\" : \"Weight cannot be empty\";\n          // if(value.length == 0){\n          //   document.getElementById(\"inputY\").style.borderColor = \"red\";\n          // }else {\n          //   document.getElementById(\"inputY\").style.borderColor = \"\";\n          // }\n          this.setState({\n            weight: event.target.value\n          });\n          break;\n\n        default:\n          break;\n      } //this.setState({formErrors, [name]: value});\n\n    };\n\n    this.closeAlertS = () => {\n      this.setState({\n        alertS: false\n      });\n    };\n\n    this.closeAlertF = () => {\n      this.setState({\n        alertF: false\n      });\n    };\n\n    this.state = {\n      userid: this.props.auth.user.id,\n      wasteType: '',\n      pickType: '',\n      weight: '',\n      time: '',\n      alertS: false,\n      alertF: false\n    };\n    this.handleChangeWaste = this.handleChangeWaste.bind(this);\n    this.handleChangeType = this.handleChangeType.bind(this);\n    this.handleChangeWeight = this.handleChangeWeight.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  handleTimeChange(event) {\n    this.setState({\n      time: event.target.value\n    });\n    document.getElementById(\"time\").innerHTML = \"Pickup/Drop time set to \" + event.target.value;\n  }\n\n  handleChangeWaste(event) {\n    this.setState({\n      wasteType: event.target.value\n    });\n  }\n\n  handleChangeType(event) {\n    this.setState({\n      pickType: event.target.value\n    });\n    document.getElementById(\"time\").innerHTML = \"\";\n  }\n\n  handleChangeWeight(event) {\n    this.setState({\n      weight: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.alertS ? React.createElement(Alert, {\n      variant: \"success\",\n      onClose: () => this.closeAlertS(),\n      dismissible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Request submitted successfully.\") : '', this.state.alertF ? React.createElement(Alert, {\n      variant: \"danger\",\n      onClose: () => this.closeAlertF(),\n      dismissible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Please all fields.\") : '', React.createElement(\"div\", {\n      class: \"container\",\n      id: \"backgroundImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"plastic\",\n      name: \"wasteType\",\n      value: \"Plastic\",\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      class: \"metal\",\n      name: \"wasteType\",\n      value: \"Metal\",\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      class: \"paper\",\n      name: \"wasteType\",\n      value: \"Paper\",\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"inputPassword\",\n      class: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Waste Type\"), React.createElement(\"div\", {\n      class: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"inputWatt\",\n      value: this.state.wasteType,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      for: \"inputPassword\",\n      class: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Approximate weight\"), React.createElement(\"div\", {\n      class: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"input-group-append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      name: \"weight\",\n      class: \"form-control\",\n      id: \"inputWatt\",\n      onChange: this.handleChange,\n      min: \"1\",\n      max: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      class: \"input-group-text\",\n      id: \"inputGroupPrepend2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Kg\"))), React.createElement(\"div\", {\n      class: \"form-check form-check-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"form-check-input\",\n      type: \"radio\",\n      name: \"inlineRadioOptions\",\n      id: \"inlineRadio1\",\n      value: \"pickup\",\n      onClick: this.handleChangeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"form-check-label\",\n      for: \"inlineRadio1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Pick-Up\")), React.createElement(\"div\", {\n      class: \"form-check form-check-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"form-check-input\",\n      type: \"radio\",\n      name: \"inlineRadioOptions\",\n      id: \"inlineRadio2\",\n      value: \"dropoff\",\n      onClick: this.handleChangeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"form-check-label\",\n      for: \"inlineRadio2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Drop-Off\")), this.buttonSet(this.state.pickType), React.createElement(\"div\", {\n      id: \"time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      id: \"btnSub\",\n      type: \"button\",\n      class: \"btn btn-success\",\n      \"data-toggle\": \"alert\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Our Drop Off store location\"), React.createElement(Map, {\n      google: this.props.google,\n      zoom: 14,\n      style: mapStyles,\n      initialCenter: {\n        lat: 42.3367,\n        lng: -71.0875\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      position: {\n        lat: 42.3367,\n        lng: -71.0875\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))));\n  }\n\n}\n\n;\nGarbage.propTypes = {\n  submitGarbageData: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  submitGarbageData,\n  logoutUser\n})(GoogleApiWrapper({\n  apiKey: \"AIzaSyDiqjm-md1hFlBudX6E31MQiCWZNsqPgAA\"\n})(Garbage));","map":{"version":3,"sources":["/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Services/Garbage.js"],"names":["React","PropTypes","logoutUser","connect","Alert","submitGarbageData","Map","GoogleApiWrapper","Marker","mapStyles","width","height","marginLeft","Garbage","Component","constructor","props","buttonSet","type","handleTimeChange","onSubmit","e","preventDefault","state","wasteType","weight","gData","userid","auth","user","id","setState","alertS","alertF","handleChange","event","target","name","value","formErrors","closeAlertS","closeAlertF","pickType","time","handleChangeWaste","bind","handleChangeType","handleChangeWeight","document","getElementById","innerHTML","render","google","lat","lng","propTypes","func","isRequired","object","mapStateToProps","apiKey"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Services.css';\nimport PropTypes from \"prop-types\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { connect } from \"react-redux\";\nimport {Alert} from \"react-bootstrap\";\nimport { submitGarbageData } from \"../../actions/garbageActions\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nconst mapStyles = {\n    width: '80%',\n    height: '80%',\n    marginLeft: '-15px'\n  };\nclass Garbage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {userid: this.props.auth.user.id,wasteType: '', pickType: '', weight: '', time: '', alertS: false, alertF: false};\n    \n        this.handleChangeWaste = this.handleChangeWaste.bind(this);\n        this.handleChangeType = this.handleChangeType.bind(this);\n        this.handleChangeWeight = this.handleChangeWeight.bind(this);\n        this.handleTimeChange = this.handleTimeChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n      }\n      buttonSet = (type) => {\n        if(type === \"pickup\") {\n            return (\n                <div>\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"11AM\" onClick={this.handleTimeChange}>11AM</button>\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"3PM\" onClick={this.handleTimeChange}>3PM</button>\n                </div>\n            )\n        } else if(type === \"dropoff\") {\n            return (\n            <div>\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"10AM\" onClick={this.handleTimeChange}>10AM</button>\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"3PM\" onClick={this.handleTimeChange}>3PM</button>\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"7PM\" onClick={this.handleTimeChange}>7PM</button>\n                </div>\n            )\n        }\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.wasteType!=\"\" && this.state.weight !=\"\") {\n          const gData = {\n            userid: this.props.auth.user.id,\n            wasteType: this.state.wasteType,\n            weight: this.state.weight\n          };\n          this.props.submitGarbageData(gData);\n          this.setState({wasteType: '', weight: '', alertS: true});\n        } else {\n            this.setState({alertF: true});\n        }\n      }\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        let formErrors = this.state.formErrors;\n    \n        switch(name) {\n          case \"wasteType\":\n            //formErrors.month =  value.length > 0 ? \"\" : \"Waste type cannot be empty\";\n            this.setState({wasteType: event.target.value})\n            break;\n          case \"weight\":\n            // formErrors.year = value.length > 0 ? \"\" : \"Weight cannot be empty\";\n            // if(value.length == 0){\n            //   document.getElementById(\"inputY\").style.borderColor = \"red\";\n            // }else {\n            //   document.getElementById(\"inputY\").style.borderColor = \"\";\n            // }\n            this.setState({weight: event.target.value})\n            break;\n          default:\n            break;\n        }\n        //this.setState({formErrors, [name]: value});\n      };\n    handleTimeChange(event) {\n    this.setState({time: event.target.value});\n    document.getElementById(\"time\").innerHTML = \"Pickup/Drop time set to \" + event.target.value;\n      }\n      handleChangeWaste(event) {\n        this.setState({wasteType: event.target.value});\n      }\n      handleChangeType(event) {\n        this.setState({pickType: event.target.value});\n        document.getElementById(\"time\").innerHTML = \"\";\n      }\n      handleChangeWeight(event) {\n        this.setState({weight: event.target.value});\n      }\n      closeAlertS = () => {\n        this.setState({ alertS: false });\n      }\n      closeAlertF = () => {\n        this.setState({ alertF: false });\n      }\n    render() {\n        return (\n            <div class=\"bg\">\n                {(this.state.alertS ? \n                (<Alert variant=\"success\" onClose={() => this.closeAlertS()} dismissible>Request submitted successfully.</Alert>) \n                : '')}\n                {(this.state.alertF ? \n                (<Alert variant=\"danger\" onClose={() => this.closeAlertF()} dismissible>Please all fields.</Alert>) \n                : '')}\n            <div class=\"container\" id=\"backgroundImg\">\n<input class=\"plastic\" name=\"wasteType\" value=\"Plastic\" onClick={this.handleChange}></input>\n  <input class=\"metal\" name=\"wasteType\" value=\"Metal\" onClick={this.handleChange}></input>\n  <input class=\"paper\" name=\"wasteType\" value=\"Paper\" onClick={this.handleChange}></input>\n\n  <div class=\"form-group\">\n    <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Waste Type</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"inputWatt\" value={this.state.wasteType} disabled/>\n        </div>\n        <label for=\"inputPassword\" class=\"col-sm-2 col-form-label\">Approximate weight</label>\n    <div class=\"col-sm-10\">\n    <div class=\"input-group-append\">\n      <input type=\"number\" name=\"weight\"class=\"form-control\" id=\"inputWatt\" onChange={this.handleChange} min=\"1\" max=\"20\"/>\n      <span class=\"input-group-text\" id=\"inputGroupPrepend2\">Kg</span>\n      </div>\n        </div>\n        <div class=\"form-check form-check-inline\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"pickup\" onClick={this.handleChangeType}/>\n  <label class=\"form-check-label\" for=\"inlineRadio1\">Pick-Up</label>\n</div>\n<div class=\"form-check form-check-inline\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"dropoff\" onClick={this.handleChangeType}/>\n  <label class=\"form-check-label\" for=\"inlineRadio2\">Drop-Off</label>\n</div>\n{this.buttonSet(this.state.pickType)}\n<div id=\"time\"></div>\n        </div>\n        <button id=\"btnSub\" type=\"button\" class=\"btn btn-success\" data-toggle=\"alert\" onClick={this.onSubmit}>Submit</button>\n        <hr></hr>\n        <h3>Our Drop Off store location</h3>\n        <Map\n          google={this.props.google}\n          zoom={14}\n          style={mapStyles}\n          initialCenter={{ lat: 42.3367, lng:  -71.0875}}\n        >\n            <Marker position={{ lat: 42.3367, lng:  -71.0875}} />\n        </Map>\n        </div>\n        </div>\n        );\n    }\n};\n\nGarbage.propTypes = {\n    submitGarbageData: PropTypes.func.isRequired,\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n  };\n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  export default connect(\n    mapStateToProps,\n    { submitGarbageData, logoutUser }\n  )(\n    GoogleApiWrapper({\n        apiKey: (\"AIzaSyDiqjm-md1hFlBudX6E31MQiCWZNsqPgAA\")\n    })(Garbage)\n)"]},"metadata":{},"sourceType":"module"}