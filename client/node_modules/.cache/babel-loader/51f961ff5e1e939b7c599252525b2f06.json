{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Products/Cart.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport './Products.css';\nimport * as numeral from 'numeral';\nimport PaypalButton from '../../components/Jobs/pay';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Alert, Card, Button } from 'react-bootstrap';\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nconst CLIENT = {\n  sandbox: 'AXLG5l9gXCMut3IBoDyqmqKyq0fP5tl4E1V_U0UInnEtNymfLXmNKVrMbDYL0Ehoelv98tYl3t-j-p8R'\n};\nconst ENV = 'sandbox';\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCartsData = async () => {\n      if (this.props.auth.isAuthenticated) {\n        var add = 0;\n        await axios.get(\"/api/cart?id=\" + this.props.auth.user.id).then(response => {\n          this.setState({\n            products: response.data,\n            cartExists: true\n          });\n          this.state.products.items.map(item => {\n            add = add + item.productPrice * item.quantity;\n          });\n          this.setState({\n            cartTotal: numeral(add).format('$0,0.00')\n          });\n        });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    };\n\n    this.closeAlertCart = () => {\n      this.setState({\n        showSuccess: false\n      });\n    };\n\n    this.state = {\n      products: [],\n      cartExists: false,\n      cartTotal: 0,\n      showSuccess: false\n    };\n    this.getCartsData();\n  }\n\n  render() {\n    const onSuccess = payment => {\n      console.log('Successful payment!', payment);\n      this.setState({\n        showSuccess: true\n      });\n      axios.post(\"/api/order\", this.state.products).then(response => {\n        console.log(response);\n        console.log(\"hihi\");\n        axios.delete(\"/api/cart?id=\" + this.state.products._id).then(response => {\n          this.setState;\n        });\n      }).catch(err => console.log(err));\n    };\n\n    const onError = error => console.log('Erroneous payment OR failed to load script!', error);\n\n    const onCancel = data => console.log('Cancelled payment!', data);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.showSuccess ? React.createElement(Alert, {\n      variant: \"success\",\n      onClose: () => this.closeAlertCart(),\n      dismissible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Payment was successful!\") : '', React.createElement(\"div\", {\n      className: \"container cart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Your Cart\"), React.createElement(\"div\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cart-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.state.cartExists ? React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Total\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.products.items.map(item => {\n      return React.createElement(\"tr\", {\n        key: item.productName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, item.productName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, numeral(item.productPrice).format('$0,0.00')), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, item.quantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, numeral(item.productPrice * item.quantity).format('$0,0.00')), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        title: \"Remove this item from the cart\",\n        onClick: () => this.removeItem(item._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-trash\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }))));\n    }))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"No items in the cart.\")), React.createElement(\"div\", {\n      className: \"cart-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \" Total amount:\", this.state.cartExists ? React.createElement(\"span\", {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" \", this.state.cartTotal) : '')), React.createElement(PaypalButton, {\n      className: \"btn btn-info\",\n      client: CLIENT,\n      env: ENV,\n      commit: true,\n      currency: 'USD',\n      total: '100',\n      onSuccess: onSuccess,\n      onError: onError,\n      onCancel: onCancel,\n      disabled: !this.state.cartExists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"Button\",\n      className: \"empty\",\n      onClick: () => this.setActiveModal('dialog'),\n      className: \"btn btn-danger\",\n      disabled: !this.state.cartExists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \" Empty cart\")))));\n  }\n\n}\n\nCart.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(Cart);","map":{"version":3,"sources":["/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Products/Cart.js"],"names":["React","axios","numeral","PaypalButton","PropTypes","connect","Alert","Card","Button","logoutUser","Link","CLIENT","sandbox","ENV","Cart","Component","constructor","props","getCartsData","auth","isAuthenticated","add","get","user","id","then","response","setState","products","data","cartExists","state","items","map","item","productPrice","quantity","cartTotal","format","history","push","closeAlertCart","showSuccess","render","onSuccess","payment","console","log","post","delete","_id","catch","err","onError","error","onCancel","productName","removeItem","setActiveModal","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,SAAzB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AADI,CAAf;AAIA,MAAMC,GAAG,GAAG,SAAZ;;AAEA,MAAMC,IAAN,SAAmBd,KAAK,CAACe,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,YAZmB,GAYJ,YAAY;AACzB,UAAI,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,eAApB,EAAqC;AACnC,YAAIC,GAAG,GAAG,CAAV;AACA,cAAMpB,KAAK,CAACqB,GAAN,CAAU,kBAAkB,KAAKL,KAAL,CAAWE,IAAX,CAAgBI,IAAhB,CAAqBC,EAAjD,EAAqDC,IAArD,CAA2DC,QAAD,IAAc;AAC5E,eAAKC,QAAL,CAAc;AAAEC,YAAAA,QAAQ,EAAEF,QAAQ,CAACG,IAArB;AAA2BC,YAAAA,UAAU,EAAE;AAAvC,WAAd;AACA,eAAKC,KAAL,CAAWH,QAAX,CAAoBI,KAApB,CAA0BC,GAA1B,CAA+BC,IAAD,IAAU;AACtCb,YAAAA,GAAG,GAAGA,GAAG,GAAIa,IAAI,CAACC,YAAL,GAAoBD,IAAI,CAACE,QAAtC;AACD,WAFD;AAGA,eAAKT,QAAL,CAAc;AAAEU,YAAAA,SAAS,EAAEnC,OAAO,CAACmB,GAAD,CAAP,CAAaiB,MAAb,CAAoB,SAApB;AAAb,WAAd;AACD,SANK,CAAN;AAOD,OATD,MAUK;AACH,aAAKrB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF,KA1BkB;;AAAA,SA4BnBC,cA5BmB,GA4BF,MAAM;AACrB,WAAKd,QAAL,CAAc;AAAEe,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KA9BkB;;AAGjB,SAAKX,KAAL,GAAa;AACXH,MAAAA,QAAQ,EAAE,EADC;AAEXE,MAAAA,UAAU,EAAE,KAFD;AAGXO,MAAAA,SAAS,EAAE,CAHA;AAIXK,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMA,SAAKxB,YAAL;AACD;;AAuBDyB,EAAAA,MAAM,GAAG;AAEP,UAAMC,SAAS,GAAIC,OAAD,IAAa;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,OAAnC;AACA,WAAKlB,QAAL,CAAc;AAAEe,QAAAA,WAAW,EAAE;AAAf,OAAd;AACAzC,MAAAA,KAAK,CACE+C,IADP,CACY,YADZ,EAC0B,KAAKjB,KAAL,CAAWH,QADrC,EAEOH,IAFP,CAEaC,QAAD,IAAc;AAClBoB,QAAAA,OAAO,CAACC,GAAR,CAAYrB,QAAZ;AACAoB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA9C,QAAAA,KAAK,CAACgD,MAAN,CAAa,kBAAgB,KAAKlB,KAAL,CAAWH,QAAX,CAAoBsB,GAAjD,EACCzB,IADD,CACOC,QAAD,IAAc;AAClB,eAAKC,QAAL;AACD,SAHD;AAID,OATP,EAUOwB,KAVP,CAUaC,GAAG,IACNN,OAAO,CAACC,GAAR,CAAYK,GAAZ,CAXV;AAaD,KAhBD;;AAkBA,UAAMC,OAAO,GAAIC,KAAD,IACdR,OAAO,CAACC,GAAR,CAAY,6CAAZ,EAA2DO,KAA3D,CADF;;AAEA,UAAMC,QAAQ,GAAI1B,IAAD,IACfiB,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkClB,IAAlC,CADF;;AAGA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKE,KAAL,CAAWW,WAAX,GACC,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,OAAO,EAAE,MAAM,KAAKD,cAAL,EAAxC;AAA+D,MAAA,WAAW,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADD,GAEE,EAHN,EAIE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWD,UAAX,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWH,QAAX,CAAoBI,KAApB,CAA0BC,GAA1B,CAA+BC,IAAD,IAAU;AACvC,aACE;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACsB,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKtB,IAAI,CAACsB,WAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKtD,OAAO,CAACgC,IAAI,CAACC,YAAN,CAAP,CAA2BG,MAA3B,CAAkC,SAAlC,CAAL,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,IAAI,CAACE,QAAV,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKlC,OAAO,CAACgC,IAAI,CAACC,YAAL,GAAoBD,IAAI,CAACE,QAA1B,CAAP,CAA2CE,MAA3C,CAAkD,SAAlD,CAAL,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI;AAAQ,QAAA,KAAK,EAAC,gCAAd;AAA+C,QAAA,OAAO,EAAE,MAAM,KAAKmB,UAAL,CAAgBvB,IAAI,CAACgB,GAArB,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyF;AAAG,QAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzF,CAAJ,CANF,CADF;AAUD,KAXA,CADH,CAXF,CADD,GA2BC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BA5BJ,CAJF,EAmCE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACC,KAAKnB,KAAL,CAAWD,UAAX,GAAyB;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA0B,KAAKC,KAAL,CAAWM,SAArC,CAAzB,GAAmF,EADpF,CADF,CADF,EAKE,oBAAC,YAAD;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,MAAM,EAAE1B,MAFV;AAGE,MAAA,GAAG,EAAEE,GAHP;AAIE,MAAA,MAAM,EAAE,IAJV;AAKE,MAAA,QAAQ,EAAE,KALZ;AAME,MAAA,KAAK,EAAE,KANT;AAOE,MAAA,SAAS,EAAE+B,SAPb;AAQE,MAAA,OAAO,EAAES,OARX;AASE,MAAA,QAAQ,EAAEE,QATZ;AAUE,MAAA,QAAQ,EAAE,CAAC,KAAKxB,KAAL,CAAWD,UAVxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAiBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAK4B,cAAL,CAAoB,QAApB,CAFjB;AAGE,MAAA,SAAS,EAAC,gBAHZ;AAIE,MAAA,QAAQ,EAAE,CAAC,KAAK3B,KAAL,CAAWD,UAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAjBF,CAnCF,CAHF,CAJF,CADF;AAwED;;AAnIgC;;AAqInChB,IAAI,CAAC6C,SAAL,GAAiB;AACflD,EAAAA,UAAU,EAAEL,SAAS,CAACwD,IAAV,CAAeC,UADZ;AAEf1C,EAAAA,IAAI,EAAEf,SAAS,CAAC0D,MAAV,CAAiBD;AAFR,CAAjB;;AAIA,MAAME,eAAe,GAAGhC,KAAK,KAAK;AAChCZ,EAAAA,IAAI,EAAEY,KAAK,CAACZ;AADoB,CAAL,CAA7B;;AAGA,eAAed,OAAO,CACpB0D,eADoB,EAEpB;AAAEtD,EAAAA;AAAF,CAFoB,CAAP,CAGbK,IAHa,CAAf","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport './Products.css';\nimport * as numeral from 'numeral';\nimport PaypalButton from '../../components/Jobs/pay';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Alert, Card, Button } from 'react-bootstrap';\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nconst CLIENT = {\n  sandbox: 'AXLG5l9gXCMut3IBoDyqmqKyq0fP5tl4E1V_U0UInnEtNymfLXmNKVrMbDYL0Ehoelv98tYl3t-j-p8R',\n\n};\nconst ENV = 'sandbox';\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      products: [],\n      cartExists: false,\n      cartTotal: 0,\n      showSuccess: false\n    }\n    this.getCartsData();\n  }\n\n  getCartsData = async () => {\n    if (this.props.auth.isAuthenticated) {\n      var add = 0;\n      await axios.get(\"/api/cart?id=\" + this.props.auth.user.id).then((response) => {\n        this.setState({ products: response.data, cartExists: true })\n        this.state.products.items.map((item) => {\n          add = add + (item.productPrice * item.quantity);\n        });\n        this.setState({ cartTotal: numeral(add).format('$0,0.00') });\n      });\n    }\n    else {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  closeAlertCart = () => {\n    this.setState({ showSuccess: false });\n  }\n\n\n  render() {\n\n    const onSuccess = (payment) => {\n      console.log('Successful payment!', payment);\n      this.setState({ showSuccess: true })\n      axios\n            .post(\"/api/order\", this.state.products)\n            .then((response) => {\n              console.log(response);\n              console.log(\"hihi\")\n              axios.delete(\"/api/cart?id=\"+this.state.products._id)\n              .then((response) => {\n                this.setState\n              })\n            })\n            .catch(err =>\n                console.log(err)\n            );\n    }\n\n    const onError = (error) =>\n      console.log('Erroneous payment OR failed to load script!', error);\n    const onCancel = (data) =>\n      console.log('Cancelled payment!', data);\n\n    return (\n      <div>\n        {(this.state.showSuccess ?\n          (<Alert variant=\"success\" onClose={() => this.closeAlertCart()} dismissible>Payment was successful!</Alert>)\n          : '')}\n        <div className=\"container cart-container\">\n\n          <h1>Your Cart</h1>\n          <div className=\"cart\">\n\n\n\n            <div className=\"cart-items\">\n              {this.state.cartExists ?\n                <table>\n                  <thead>\n                    <tr>\n                      <th></th>\n                      <th>Product Name</th>\n                      <th>Price</th>\n                      <th>Quantity</th>\n                      <th>Total</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.products.items.map((item) => {\n                      return (\n                        <tr key={item.productName} >\n                          <td></td>\n                          <td>{item.productName}</td>\n                          <td>{numeral(item.productPrice).format('$0,0.00')}</td>\n                          <td>{item.quantity}</td>\n                          <td>{numeral(item.productPrice * item.quantity).format('$0,0.00')}</td>\n                          <td><button title=\"Remove this item from the cart\" onClick={() => this.removeItem(item._id)}><i className=\"fa fa-trash\"></i></button></td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table> :\n                <h1>No items in the cart.</h1>\n              }\n            </div>\n            <div className=\"cart-info\">\n              <p>\n                <strong> Total amount:\n                {this.state.cartExists ? (<span className=\"total\"> {this.state.cartTotal}</span>) : ''}</strong>\n              </p>\n              <PaypalButton\n                className=\"btn btn-info\"\n                client={CLIENT}\n                env={ENV}\n                commit={true}\n                currency={'USD'}\n                total={'100'}\n                onSuccess={onSuccess}\n                onError={onError}\n                onCancel={onCancel}\n                disabled={!this.state.cartExists}\n              />\n              <button type=\"Button\"\n                className=\"empty\"\n                onClick={() => this.setActiveModal('dialog')}\n                className=\"btn btn-danger\"\n                disabled={!this.state.cartExists}\n              > Empty cart</button>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nCart.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Cart);\n"]},"metadata":{},"sourceType":"module"}