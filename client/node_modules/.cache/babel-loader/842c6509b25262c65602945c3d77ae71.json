{"ast":null,"code":"'use strict';\n\nvar PropTypes = require('prop-types');\n\nvar React = require('react');\n\nvar createReactClass = require('create-react-class');\n\nvar _require = require('../common');\n\nvar Chart = _require.Chart;\nvar XAxis = _require.XAxis;\nvar YAxis = _require.YAxis;\nvar Tooltip = _require.Tooltip;\n\nvar DataSeries = require('./DataSeries');\n\nvar utils = require('../utils');\n\nvar _require2 = require('../mixins');\n\nvar CartesianChartPropsMixin = _require2.CartesianChartPropsMixin;\nvar DefaultAccessorsMixin = _require2.DefaultAccessorsMixin;\nvar ViewBoxMixin = _require2.ViewBoxMixin;\nvar TooltipMixin = _require2.TooltipMixin;\nmodule.exports = createReactClass({\n  displayName: 'LineChart',\n  propTypes: {\n    circleRadius: PropTypes.number,\n    hoverAnimation: PropTypes.bool,\n    margins: PropTypes.object,\n    data: PropTypes.array.isRequired\n  },\n  mixins: [CartesianChartPropsMixin, DefaultAccessorsMixin, ViewBoxMixin, TooltipMixin],\n  getDefaultProps: function getDefaultProps() {\n    return {\n      circleRadius: 3,\n      className: 'rd3-linechart',\n      hoverAnimation: true,\n      margins: {\n        top: 10,\n        right: 20,\n        bottom: 50,\n        left: 45\n      },\n      xAxisClassName: 'rd3-linechart-xaxis',\n      yAxisClassName: 'rd3-linechart-yaxis',\n      data: []\n    };\n  },\n  _calculateScales: utils.calculateScales,\n  render: function render() {\n    var props = this.props;\n\n    if (this.props.data && this.props.data.length < 1) {\n      return null;\n    }\n\n    var _getDimensions = this.getDimensions();\n\n    var innerWidth = _getDimensions.innerWidth;\n    var innerHeight = _getDimensions.innerHeight;\n    var trans = _getDimensions.trans;\n    var svgMargins = _getDimensions.svgMargins;\n    var yOrient = this.getYOrient();\n    var domain = props.domain || {};\n\n    if (!Array.isArray(props.data)) {\n      props.data = [props.data];\n    } // Returns an object of flattened allValues, xValues, and yValues\n\n\n    var flattenedData = utils.flattenData(props.data, props.xAccessor, props.yAccessor);\n    var allValues = flattenedData.allValues;\n    var xValues = flattenedData.xValues;\n    var yValues = flattenedData.yValues;\n\n    var scales = this._calculateScales(innerWidth, innerHeight, xValues, yValues, domain.x, domain.y);\n\n    return React.createElement('span', {\n      onMouseLeave: this.onMouseLeave\n    }, React.createElement(Chart, {\n      viewBox: this.getViewBox(),\n      legend: props.legend,\n      sideOffset: props.sideOffset,\n      data: props.data,\n      margins: props.margins,\n      colors: props.colors,\n      colorAccessor: props.colorAccessor,\n      width: props.width,\n      height: props.height,\n      title: props.title,\n      shouldUpdate: !this.state.changeState\n    }, React.createElement('g', {\n      transform: trans,\n      className: props.className\n    }, React.createElement(XAxis, {\n      xAxisClassName: props.xAxisClassName,\n      strokeWidth: props.xAxisStrokeWidth,\n      xAxisTickValues: props.xAxisTickValues,\n      xAxisTickCount: props.xAxisTickCount,\n      xAxisTickInterval: props.xAxisTickInterval,\n      xAxisOffset: props.xAxisOffset,\n      xScale: scales.xScale,\n      xAxisLabel: props.xAxisLabel,\n      xAxisLabelOffset: props.xAxisLabelOffset,\n      tickFormatting: props.xAxisFormatter,\n      tickStroke: props.xAxisTickStroke,\n      tickTextStroke: props.xAxisTickTextStroke,\n      xOrient: props.xOrient,\n      yOrient: yOrient,\n      data: props.data,\n      margins: svgMargins,\n      width: innerWidth,\n      height: innerHeight,\n      horizontalChart: props.horizontal,\n      stroke: props.axesColor,\n      gridVertical: props.gridVertical,\n      gridVerticalStroke: props.gridVerticalStroke,\n      gridVerticalStrokeWidth: props.gridVerticalStrokeWidth,\n      gridVerticalStrokeDash: props.gridVerticalStrokeDash\n    }), React.createElement(YAxis, {\n      yAxisClassName: props.yAxisClassName,\n      strokeWidth: props.yAxisStrokeWidth,\n      yScale: scales.yScale,\n      yAxisTickValues: props.yAxisTickValues,\n      yAxisTickCount: props.yAxisTickCount,\n      yAxisOffset: props.yAxisOffset,\n      yAxisLabel: props.yAxisLabel,\n      yAxisLabelOffset: props.yAxisLabelOffset,\n      tickFormatting: props.yAxisFormatter,\n      tickStroke: props.yAxisTickStroke,\n      tickTextStroke: props.yAxisTickTextStroke,\n      xOrient: props.xOrient,\n      yOrient: yOrient,\n      margins: svgMargins,\n      width: innerWidth,\n      height: innerHeight,\n      horizontalChart: props.horizontal,\n      stroke: props.axesColor,\n      gridHorizontal: props.gridHorizontal,\n      gridHorizontalStroke: props.gridHorizontalStroke,\n      gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth,\n      gridHorizontalStrokeDash: props.gridHorizontalStrokeDash\n    }), React.createElement(DataSeries, {\n      xScale: scales.xScale,\n      yScale: scales.yScale,\n      xAccessor: props.xAccessor,\n      yAccessor: props.yAccessor,\n      hoverAnimation: props.hoverAnimation,\n      circleRadius: props.circleRadius,\n      data: props.data,\n      value: allValues,\n      interpolationType: props.interpolationType,\n      colors: props.colors,\n      colorAccessor: props.colorAccessor,\n      width: innerWidth,\n      height: innerHeight,\n      onMouseOver: this.onMouseOver\n    }))), props.showTooltip ? React.createElement(Tooltip, this.state.tooltip) : null);\n  }\n});","map":{"version":3,"sources":["/Users/apple/Desktop/Personal_Projects/greener-mern/node_modules/rd3/build/cjs/linechart/LineChart.js"],"names":["PropTypes","require","React","createReactClass","_require","Chart","XAxis","YAxis","Tooltip","DataSeries","utils","_require2","CartesianChartPropsMixin","DefaultAccessorsMixin","ViewBoxMixin","TooltipMixin","module","exports","displayName","propTypes","circleRadius","number","hoverAnimation","bool","margins","object","data","array","isRequired","mixins","getDefaultProps","className","top","right","bottom","left","xAxisClassName","yAxisClassName","_calculateScales","calculateScales","render","props","length","_getDimensions","getDimensions","innerWidth","innerHeight","trans","svgMargins","yOrient","getYOrient","domain","Array","isArray","flattenedData","flattenData","xAccessor","yAccessor","allValues","xValues","yValues","scales","x","y","createElement","onMouseLeave","viewBox","getViewBox","legend","sideOffset","colors","colorAccessor","width","height","title","shouldUpdate","state","changeState","transform","strokeWidth","xAxisStrokeWidth","xAxisTickValues","xAxisTickCount","xAxisTickInterval","xAxisOffset","xScale","xAxisLabel","xAxisLabelOffset","tickFormatting","xAxisFormatter","tickStroke","xAxisTickStroke","tickTextStroke","xAxisTickTextStroke","xOrient","horizontalChart","horizontal","stroke","axesColor","gridVertical","gridVerticalStroke","gridVerticalStrokeWidth","gridVerticalStrokeDash","yAxisStrokeWidth","yScale","yAxisTickValues","yAxisTickCount","yAxisOffset","yAxisLabel","yAxisLabelOffset","yAxisFormatter","yAxisTickStroke","yAxisTickTextStroke","gridHorizontal","gridHorizontalStroke","gridHorizontalStrokeWidth","gridHorizontalStrokeDash","value","interpolationType","onMouseOver","showTooltip","tooltip"],"mappings":"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","sourcesContent":["'use strict';\n\nvar PropTypes = require('prop-types');\nvar React = require('react');\nvar createReactClass = require('create-react-class');\n\nvar _require = require('../common');\n\nvar Chart = _require.Chart;\nvar XAxis = _require.XAxis;\nvar YAxis = _require.YAxis;\nvar Tooltip = _require.Tooltip;\n\nvar DataSeries = require('./DataSeries');\nvar utils = require('../utils');\n\nvar _require2 = require('../mixins');\n\nvar CartesianChartPropsMixin = _require2.CartesianChartPropsMixin;\nvar DefaultAccessorsMixin = _require2.DefaultAccessorsMixin;\nvar ViewBoxMixin = _require2.ViewBoxMixin;\nvar TooltipMixin = _require2.TooltipMixin;\n\n\nmodule.exports = createReactClass({\n\n  displayName: 'LineChart',\n\n  propTypes: {\n    circleRadius: PropTypes.number,\n    hoverAnimation: PropTypes.bool,\n    margins: PropTypes.object,\n    data: PropTypes.array.isRequired\n  },\n\n  mixins: [CartesianChartPropsMixin, DefaultAccessorsMixin, ViewBoxMixin, TooltipMixin],\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      circleRadius: 3,\n      className: 'rd3-linechart',\n      hoverAnimation: true,\n      margins: { top: 10, right: 20, bottom: 50, left: 45 },\n      xAxisClassName: 'rd3-linechart-xaxis',\n      yAxisClassName: 'rd3-linechart-yaxis',\n      data: []\n    };\n  },\n\n\n  _calculateScales: utils.calculateScales,\n\n  render: function render() {\n    var props = this.props;\n\n    if (this.props.data && this.props.data.length < 1) {\n      return null;\n    }\n\n    var _getDimensions = this.getDimensions();\n\n    var innerWidth = _getDimensions.innerWidth;\n    var innerHeight = _getDimensions.innerHeight;\n    var trans = _getDimensions.trans;\n    var svgMargins = _getDimensions.svgMargins;\n\n    var yOrient = this.getYOrient();\n    var domain = props.domain || {};\n\n    if (!Array.isArray(props.data)) {\n      props.data = [props.data];\n    }\n\n    // Returns an object of flattened allValues, xValues, and yValues\n    var flattenedData = utils.flattenData(props.data, props.xAccessor, props.yAccessor);\n\n    var allValues = flattenedData.allValues;\n    var xValues = flattenedData.xValues;\n    var yValues = flattenedData.yValues;\n    var scales = this._calculateScales(innerWidth, innerHeight, xValues, yValues, domain.x, domain.y);\n\n    return React.createElement(\n      'span',\n      { onMouseLeave: this.onMouseLeave },\n      React.createElement(\n        Chart,\n        {\n          viewBox: this.getViewBox(),\n          legend: props.legend,\n          sideOffset: props.sideOffset,\n          data: props.data,\n          margins: props.margins,\n          colors: props.colors,\n          colorAccessor: props.colorAccessor,\n          width: props.width,\n          height: props.height,\n          title: props.title,\n          shouldUpdate: !this.state.changeState\n        },\n        React.createElement(\n          'g',\n          { transform: trans, className: props.className },\n          React.createElement(XAxis, {\n            xAxisClassName: props.xAxisClassName,\n            strokeWidth: props.xAxisStrokeWidth,\n            xAxisTickValues: props.xAxisTickValues,\n            xAxisTickCount: props.xAxisTickCount,\n            xAxisTickInterval: props.xAxisTickInterval,\n            xAxisOffset: props.xAxisOffset,\n            xScale: scales.xScale,\n            xAxisLabel: props.xAxisLabel,\n            xAxisLabelOffset: props.xAxisLabelOffset,\n            tickFormatting: props.xAxisFormatter,\n            tickStroke: props.xAxisTickStroke,\n            tickTextStroke: props.xAxisTickTextStroke,\n            xOrient: props.xOrient,\n            yOrient: yOrient,\n            data: props.data,\n            margins: svgMargins,\n            width: innerWidth,\n            height: innerHeight,\n            horizontalChart: props.horizontal,\n            stroke: props.axesColor,\n            gridVertical: props.gridVertical,\n            gridVerticalStroke: props.gridVerticalStroke,\n            gridVerticalStrokeWidth: props.gridVerticalStrokeWidth,\n            gridVerticalStrokeDash: props.gridVerticalStrokeDash\n          }),\n          React.createElement(YAxis, {\n            yAxisClassName: props.yAxisClassName,\n            strokeWidth: props.yAxisStrokeWidth,\n            yScale: scales.yScale,\n            yAxisTickValues: props.yAxisTickValues,\n            yAxisTickCount: props.yAxisTickCount,\n            yAxisOffset: props.yAxisOffset,\n            yAxisLabel: props.yAxisLabel,\n            yAxisLabelOffset: props.yAxisLabelOffset,\n            tickFormatting: props.yAxisFormatter,\n            tickStroke: props.yAxisTickStroke,\n            tickTextStroke: props.yAxisTickTextStroke,\n            xOrient: props.xOrient,\n            yOrient: yOrient,\n            margins: svgMargins,\n            width: innerWidth,\n            height: innerHeight,\n            horizontalChart: props.horizontal,\n            stroke: props.axesColor,\n            gridHorizontal: props.gridHorizontal,\n            gridHorizontalStroke: props.gridHorizontalStroke,\n            gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth,\n            gridHorizontalStrokeDash: props.gridHorizontalStrokeDash\n          }),\n          React.createElement(DataSeries, {\n            xScale: scales.xScale,\n            yScale: scales.yScale,\n            xAccessor: props.xAccessor,\n            yAccessor: props.yAccessor,\n            hoverAnimation: props.hoverAnimation,\n            circleRadius: props.circleRadius,\n            data: props.data,\n            value: allValues,\n            interpolationType: props.interpolationType,\n            colors: props.colors,\n            colorAccessor: props.colorAccessor,\n            width: innerWidth,\n            height: innerHeight,\n            onMouseOver: this.onMouseOver\n          })\n        )\n      ),\n      props.showTooltip ? React.createElement(Tooltip, this.state.tooltip) : null\n    );\n  }\n});"]},"metadata":{},"sourceType":"script"}