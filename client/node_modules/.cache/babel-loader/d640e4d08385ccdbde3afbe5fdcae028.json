{"ast":null,"code":"'use strict';\n\nvar PropTypes = require('prop-types');\n\nmodule.exports = {\n  propTypes: {\n    showTooltip: PropTypes.bool,\n    tooltipFormat: PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      showTooltip: true,\n      tooltipFormat: function tooltipFormat(d) {\n        return String(d.yValue);\n      }\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      tooltip: {\n        x: 0,\n        y: 0,\n        child: '',\n        show: false\n      },\n      changeState: false\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps() {\n    this.setState({\n      changeState: false\n    });\n  },\n  onMouseOver: function onMouseOver(x, y, dataPoint) {\n    if (!this.props.showTooltip) {\n      return;\n    }\n\n    this.setState({\n      tooltip: {\n        x: x,\n        y: y,\n        child: this.props.tooltipFormat.call(this, dataPoint),\n        show: true\n      },\n      changeState: true\n    });\n  },\n  onMouseLeave: function onMouseLeave() {\n    if (!this.props.showTooltip) {\n      return;\n    }\n\n    this.setState({\n      tooltip: {\n        x: 0,\n        y: 0,\n        child: '',\n        show: false\n      },\n      changeState: true\n    });\n  }\n};","map":{"version":3,"sources":["/Users/apple/Desktop/Personal_Projects/greener-mern/node_modules/rd3/build/cjs/mixins/TooltipMixin.js"],"names":["PropTypes","require","module","exports","propTypes","showTooltip","bool","tooltipFormat","func","getDefaultProps","d","String","yValue","getInitialState","tooltip","x","y","child","show","changeState","componentWillReceiveProps","setState","onMouseOver","dataPoint","props","call","onMouseLeave"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AAEfC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAEL,SAAS,CAACM,IADd;AAETC,IAAAA,aAAa,EAAEP,SAAS,CAACQ;AAFhB,GAFI;AAOfC,EAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,WAAO;AACLJ,MAAAA,WAAW,EAAE,IADR;AAELE,MAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBG,CAAvB,EAA0B;AACvC,eAAOC,MAAM,CAACD,CAAC,CAACE,MAAH,CAAb;AACD;AAJI,KAAP;AAMD,GAdc;AAefC,EAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,WAAO;AACLC,MAAAA,OAAO,EAAE;AACPC,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAFI;AAGPC,QAAAA,KAAK,EAAE,EAHA;AAIPC,QAAAA,IAAI,EAAE;AAJC,OADJ;AAOLC,MAAAA,WAAW,EAAE;AAPR,KAAP;AASD,GAzBc;AA0BfC,EAAAA,yBAAyB,EAAE,SAASA,yBAAT,GAAqC;AAC9D,SAAKC,QAAL,CAAc;AACZF,MAAAA,WAAW,EAAE;AADD,KAAd;AAGD,GA9Bc;AA+BfG,EAAAA,WAAW,EAAE,SAASA,WAAT,CAAqBP,CAArB,EAAwBC,CAAxB,EAA2BO,SAA3B,EAAsC;AACjD,QAAI,CAAC,KAAKC,KAAL,CAAWnB,WAAhB,EAA6B;AAC3B;AACD;;AACD,SAAKgB,QAAL,CAAc;AACZP,MAAAA,OAAO,EAAE;AACPC,QAAAA,CAAC,EAAEA,CADI;AAEPC,QAAAA,CAAC,EAAEA,CAFI;AAGPC,QAAAA,KAAK,EAAE,KAAKO,KAAL,CAAWjB,aAAX,CAAyBkB,IAAzB,CAA8B,IAA9B,EAAoCF,SAApC,CAHA;AAIPL,QAAAA,IAAI,EAAE;AAJC,OADG;AAOZC,MAAAA,WAAW,EAAE;AAPD,KAAd;AASD,GA5Cc;AA6CfO,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,QAAI,CAAC,KAAKF,KAAL,CAAWnB,WAAhB,EAA6B;AAC3B;AACD;;AACD,SAAKgB,QAAL,CAAc;AACZP,MAAAA,OAAO,EAAE;AACPC,QAAAA,CAAC,EAAE,CADI;AAEPC,QAAAA,CAAC,EAAE,CAFI;AAGPC,QAAAA,KAAK,EAAE,EAHA;AAIPC,QAAAA,IAAI,EAAE;AAJC,OADG;AAOZC,MAAAA,WAAW,EAAE;AAPD,KAAd;AASD;AA1Dc,CAAjB","sourcesContent":["'use strict';\n\nvar PropTypes = require('prop-types');\n\nmodule.exports = {\n\n  propTypes: {\n    showTooltip: PropTypes.bool,\n    tooltipFormat: PropTypes.func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      showTooltip: true,\n      tooltipFormat: function tooltipFormat(d) {\n        return String(d.yValue);\n      }\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      tooltip: {\n        x: 0,\n        y: 0,\n        child: '',\n        show: false\n      },\n      changeState: false\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps() {\n    this.setState({\n      changeState: false\n    });\n  },\n  onMouseOver: function onMouseOver(x, y, dataPoint) {\n    if (!this.props.showTooltip) {\n      return;\n    }\n    this.setState({\n      tooltip: {\n        x: x,\n        y: y,\n        child: this.props.tooltipFormat.call(this, dataPoint),\n        show: true\n      },\n      changeState: true\n    });\n  },\n  onMouseLeave: function onMouseLeave() {\n    if (!this.props.showTooltip) {\n      return;\n    }\n    this.setState({\n      tooltip: {\n        x: 0,\n        y: 0,\n        child: '',\n        show: false\n      },\n      changeState: true\n    });\n  }\n};"]},"metadata":{},"sourceType":"script"}