{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Products/Cart.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport './Products.css';\nimport * as numeral from 'numeral';\nimport PaypalButton from '../../components/Jobs/pay';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Alert, Card, Button } from 'react-bootstrap';\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\nconst CLIENT = {\n  sandbox: 'AXLG5l9gXCMut3IBoDyqmqKyq0fP5tl4E1V_U0UInnEtNymfLXmNKVrMbDYL0Ehoelv98tYl3t-j-p8R'\n};\nconst ENV = 'sandbox';\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getCartsData = async () => {\n      console.log(this.props.auth);\n\n      if (this.props.auth.isAuthenticated) {\n        var add = 0;\n        await axios.get(\"/api/cart?id=\" + this.props.auth.user.id).then(response => {\n          this.setState({\n            products: response.data,\n            cartExists: true\n          });\n          this.state.products.items.map(item => {\n            add = add + item.productPrice * item.quantity;\n          });\n          this.setState({\n            cartTotal: numeral(add).format('$0,0.00')\n          });\n        });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    };\n\n    this.closeAlertCart = () => {\n      this.setState({\n        showSuccess: false\n      });\n    };\n\n    this.state = {\n      products: [],\n      cartExists: false,\n      cartTotal: 0,\n      showSuccess: false\n    };\n    this.getCartsData();\n  }\n\n  setActiveModal() {\n    axios.delete(\"/api/cart?id=\" + this.state.products._id).then(response => {\n      this.setState({\n        products: [],\n        cartExists: false,\n        cartTotal: 0,\n        showSuccess: false\n      });\n    });\n  }\n\n  render() {\n    const onSuccess = payment => {\n      console.log('Successful payment!', payment);\n      this.setState({\n        showSuccess: true\n      });\n      const oData = {\n        email: this.props.auth.user.email,\n        name: this.props.auth.user.name,\n        products: this.state.products\n      };\n      axios.post(\"/api/sendordermail\", oData).then(response => {\n        console.log(response);\n      }).catch(err => console.log(err));\n      axios.post(\"/api/order\", this.state.products).then(response => {\n        console.log(response);\n        console.log(\"hihi\");\n        axios.delete(\"/api/cart?id=\" + this.state.products._id).then(response => {\n          this.setState({\n            products: [],\n            cartExists: false,\n            cartTotal: 0,\n            showSuccess: false\n          });\n        });\n      }).catch(err => console.log(err));\n    };\n\n    const onError = error => console.log('Erroneous payment OR failed to load script!', error);\n\n    const onCancel = data => console.log('Cancelled payment!', data);\n\n    return React.createElement(\"div\", {\n      className: \"cartBg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container cart-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.state.showSuccess ? React.createElement(Alert, {\n      variant: \"success\",\n      onClose: () => this.closeAlertCart(),\n      dismissible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Payment was successful!\") : '', React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Your Cart\"), React.createElement(\"div\", {\n      className: \"cart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cart-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.cartExists ? React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Product Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Quantity\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Total\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, this.state.products.items.map(item => {\n      return React.createElement(\"tr\", {\n        key: item.productName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, item.productName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, numeral(item.productPrice).format('$0,0.00')), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, item.quantity), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, numeral(item.productPrice * item.quantity).format('$0,0.00')));\n    }))) : React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"No items in the cart.\")), React.createElement(\"div\", {\n      className: \"cart-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" Total amount:\", this.state.cartExists ? React.createElement(\"span\", {\n      className: \"total\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \" \", this.state.cartTotal) : '')), this.state.cartExists ? React.createElement(PaypalButton, {\n      className: \"btn btn-info\",\n      client: CLIENT,\n      env: ENV,\n      commit: true,\n      currency: 'USD',\n      total: '100',\n      onSuccess: onSuccess,\n      onError: onError,\n      onCancel: onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }) : [], React.createElement(\"button\", {\n      type: \"Button\",\n      className: \"empty\",\n      onClick: () => this.setActiveModal(),\n      className: \"btn btn-danger\",\n      disabled: !this.state.cartExists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \" Empty cart\")))));\n  }\n\n}\n\nCart.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(Cart);","map":{"version":3,"sources":["/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Products/Cart.js"],"names":["React","axios","numeral","PaypalButton","PropTypes","connect","Alert","Card","Button","logoutUser","Link","CLIENT","sandbox","ENV","Cart","Component","constructor","props","getCartsData","console","log","auth","isAuthenticated","add","get","user","id","then","response","setState","products","data","cartExists","state","items","map","item","productPrice","quantity","cartTotal","format","history","push","closeAlertCart","showSuccess","setActiveModal","delete","_id","render","onSuccess","payment","oData","email","name","post","catch","err","onError","error","onCancel","productName","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport './Products.css';\nimport * as numeral from 'numeral';\nimport PaypalButton from '../../components/Jobs/pay';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Alert, Card, Button } from 'react-bootstrap';\nimport { logoutUser } from \"../../actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nconst CLIENT = {\n  sandbox: 'AXLG5l9gXCMut3IBoDyqmqKyq0fP5tl4E1V_U0UInnEtNymfLXmNKVrMbDYL0Ehoelv98tYl3t-j-p8R',\n\n};\nconst ENV = 'sandbox';\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      products: [],\n      cartExists: false,\n      cartTotal: 0,\n      showSuccess: false\n    }\n    this.getCartsData();\n  }\n\n  getCartsData = async () => {\n    console.log(this.props.auth);\n    if (this.props.auth.isAuthenticated) {\n      var add = 0;\n      await axios.get(\"/api/cart?id=\" + this.props.auth.user.id).then((response) => {\n        this.setState({ products: response.data, cartExists: true });\n        this.state.products.items.map((item) => {\n          add = add + (item.productPrice * item.quantity);\n        });\n        this.setState({ cartTotal: numeral(add).format('$0,0.00') }); \n      });\n    }\n    else {\n      this.props.history.push(\"/login\");\n    }\n  }\n\n  closeAlertCart = () => {\n    this.setState({ showSuccess: false });\n  }\n\n  setActiveModal(){\n    axios.delete(\"/api/cart?id=\" + this.state.products._id)\n            .then((response) => {\n              this.setState({\n                products: [],\n                cartExists: false,\n                cartTotal: 0,\n                showSuccess: false\n              })\n            })\n  }\n\n\n  render() {\n\n    const onSuccess = (payment) => {\n      console.log('Successful payment!', payment);\n      this.setState({ showSuccess: true })\n      const oData = {\n        email: this.props.auth.user.email,\n        name: this.props.auth.user.name,\n        products: this.state.products\n      };\n      axios\n      .post(\"/api/sendordermail\", oData)\n      .then((response)=> {\n        console.log(response);\n      })\n      .catch(err =>\n        console.log(err)\n      );\n      axios\n        .post(\"/api/order\", this.state.products)\n        .then((response) => {\n          console.log(response);\n          console.log(\"hihi\")\n          axios.delete(\"/api/cart?id=\" + this.state.products._id)\n            .then((response) => {\n              this.setState({\n                products: [],\n                cartExists: false,\n                cartTotal: 0,\n                showSuccess: false\n              })\n            })\n        })\n        .catch(err =>\n          console.log(err)\n        );\n    }\n\n    const onError = (error) =>\n      console.log('Erroneous payment OR failed to load script!', error);\n    const onCancel = (data) =>\n      console.log('Cancelled payment!', data);\n\n    return (\n      <div className=\"cartBg\">\n        <div className=\"container cart-container\">\n        {(this.state.showSuccess ?\n          (<Alert variant=\"success\" onClose={() => this.closeAlertCart()} dismissible>Payment was successful!</Alert>)\n          : '')}\n          <h1>Your Cart</h1>\n          <div className=\"cart\">\n\n            <div className=\"cart-items\">\n              {this.state.cartExists ?\n                <table>\n                  <thead>\n                    <tr>\n                      <th></th>\n                      <th>Product Name</th>\n                      <th>Price</th>\n                      <th>Quantity</th>\n                      <th>Total</th>\n                      \n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.products.items.map((item) => {\n                      return (\n                        <tr key={item.productName} >\n                          <td></td>\n                          <td>{item.productName}</td>\n                          <td>{numeral(item.productPrice).format('$0,0.00')}</td>\n                          <td>{item.quantity}</td>\n                          <td>{numeral(item.productPrice * item.quantity).format('$0,0.00')}</td>\n                          \n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table> :\n                <h1>No items in the cart.</h1>\n              }\n            </div>\n            <div className=\"cart-info\">\n              <p>\n                <strong> Total amount:\n                {this.state.cartExists ? (<span className=\"total\"> {this.state.cartTotal}</span>) : ''}</strong>\n              </p>\n              { this.state.cartExists ? <PaypalButton\n                className=\"btn btn-info\"\n                client={CLIENT}\n                env={ENV}\n                commit={true}\n                currency={'USD'}\n                total={'100'}\n                onSuccess={onSuccess}\n                onError={onError}\n                onCancel={onCancel}\n              /> : []}\n              <button type=\"Button\"\n                className=\"empty\"\n                onClick={() => this.setActiveModal()}\n                className=\"btn btn-danger\"\n                disabled={!this.state.cartExists}\n              > Empty cart</button>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nCart.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Cart);\n"]},"metadata":{},"sourceType":"module"}