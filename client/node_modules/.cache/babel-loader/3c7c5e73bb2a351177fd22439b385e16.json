{"ast":null,"code":"'use strict';\n\nvar PropTypes = require('prop-types');\n\nvar React = require('react');\n\nvar createReactClass = require('create-react-class');\n\nvar _require = require('../common');\n\nvar Chart = _require.Chart;\nvar XAxis = _require.XAxis;\nvar YAxis = _require.YAxis;\nvar Tooltip = _require.Tooltip;\n\nvar DataSeries = require('./DataSeries');\n\nvar utils = require('../utils');\n\nvar _require2 = require('../mixins');\n\nvar CartesianChartPropsMixin = _require2.CartesianChartPropsMixin;\nvar DefaultAccessorsMixin = _require2.DefaultAccessorsMixin;\nvar ViewBoxMixin = _require2.ViewBoxMixin;\nvar TooltipMixin = _require2.TooltipMixin;\nmodule.exports = createReactClass({\n  displayName: 'ScatterChart',\n  propTypes: {\n    circleRadius: PropTypes.number,\n    className: PropTypes.string,\n    hoverAnimation: PropTypes.bool,\n    margins: PropTypes.object,\n    xAxisClassName: PropTypes.string,\n    xAxisStrokeWidth: PropTypes.number,\n    yAxisClassName: PropTypes.string,\n    yAxisStrokeWidth: PropTypes.number\n  },\n  mixins: [CartesianChartPropsMixin, DefaultAccessorsMixin, ViewBoxMixin, TooltipMixin],\n  getDefaultProps: function getDefaultProps() {\n    return {\n      circleRadius: 3,\n      className: 'rd3-scatterchart',\n      hoverAnimation: true,\n      margins: {\n        top: 10,\n        right: 20,\n        bottom: 50,\n        left: 45\n      },\n      xAxisClassName: 'rd3-scatterchart-xaxis',\n      xAxisStrokeWidth: 1,\n      yAxisClassName: 'rd3-scatterchart-yaxis',\n      yAxisStrokeWidth: 1\n    };\n  },\n  _calculateScales: utils.calculateScales,\n  render: function render() {\n    var props = this.props;\n    var data = props.data;\n\n    if (!data || data.length < 1) {\n      return null;\n    }\n\n    var _getDimensions = this.getDimensions();\n\n    var innerWidth = _getDimensions.innerWidth;\n    var innerHeight = _getDimensions.innerHeight;\n    var trans = _getDimensions.trans;\n    var svgMargins = _getDimensions.svgMargins;\n    var yOrient = this.getYOrient();\n    var domain = props.domain || {}; // Returns an object of flattened allValues, xValues, and yValues\n\n    var flattenedData = utils.flattenData(data, props.xAccessor, props.yAccessor);\n    var allValues = flattenedData.allValues;\n    var xValues = flattenedData.xValues;\n    var yValues = flattenedData.yValues;\n\n    var scales = this._calculateScales(innerWidth, innerHeight, xValues, yValues, domain.x, domain.y);\n\n    var xScale = scales.xScale;\n    var yScale = scales.yScale;\n    return React.createElement('span', {\n      onMouseLeave: this.onMouseLeave\n    }, React.createElement(Chart, {\n      colors: props.colors,\n      colorAccessor: props.colorAccessor,\n      data: data,\n      height: props.height,\n      legend: props.legend,\n      sideOffset: props.sideOffset,\n      margins: props.margins,\n      title: props.title,\n      viewBox: this.getViewBox(),\n      width: props.width,\n      shouldUpdate: !this.state.changeState\n    }, React.createElement('g', {\n      className: props.className,\n      transform: trans\n    }, React.createElement(XAxis, {\n      data: data,\n      height: innerHeight,\n      horizontalChart: props.horizontal,\n      margins: svgMargins,\n      stroke: props.axesColor,\n      strokeWidth: props.xAxisStrokeWidth.toString(),\n      tickFormatting: props.xAxisFormatter,\n      tickStroke: props.xAxisTickStroke,\n      tickTextStroke: props.xAxisTickTextStroke,\n      width: innerWidth,\n      xAxisClassName: props.xAxisClassName,\n      xAxisLabel: props.xAxisLabel,\n      xAxisLabelOffset: props.xAxisLabelOffset,\n      xAxisOffset: props.xAxisOffset,\n      xAxisTickInterval: props.xAxisTickInterval,\n      xAxisTickValues: props.xAxisTickValues,\n      xOrient: props.xOrient,\n      yOrient: yOrient,\n      xScale: xScale,\n      gridVertical: props.gridVertical,\n      gridVerticalStroke: props.gridVerticalStroke,\n      gridVerticalStrokeWidth: props.gridVerticalStrokeWidth,\n      gridVerticalStrokeDash: props.gridVerticalStrokeDash\n    }), React.createElement(YAxis, {\n      data: data,\n      width: innerWidth,\n      height: innerHeight,\n      horizontalChart: props.horizontal,\n      margins: svgMargins,\n      stroke: props.axesColor,\n      strokeWidth: props.yAxisStrokeWidth.toString(),\n      tickFormatting: props.yAxisFormatter,\n      tickStroke: props.yAxisTickStroke,\n      tickTextStroke: props.yAxisTickTextStroke,\n      yAxisClassName: props.yAxisClassName,\n      yAxisLabel: props.yAxisLabel,\n      yAxisLabelOffset: props.yAxisLabelOffset,\n      yAxisOffset: props.yAxisOffset,\n      yAxisTickValues: props.yAxisTickValues,\n      yAxisTickCount: props.yAxisTickCount,\n      yScale: yScale,\n      xOrient: props.xOrient,\n      yOrient: yOrient,\n      gridHorizontal: props.gridHorizontal,\n      gridHorizontalStroke: props.gridHorizontalStroke,\n      gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth,\n      gridHorizontalStrokeDash: props.gridHorizontalStrokeDash\n    }), React.createElement(DataSeries, {\n      circleRadius: props.circleRadius,\n      colors: props.colors,\n      colorAccessor: props.colorAccessor,\n      data: allValues,\n      height: innerHeight,\n      hoverAnimation: props.hoverAnimation,\n      width: innerWidth,\n      xAccessor: function xAccessor(coord) {\n        return coord.x;\n      },\n      xScale: xScale,\n      yAccessor: function yAccessor(coord) {\n        return coord.y;\n      },\n      yScale: yScale,\n      onMouseOver: this.onMouseOver\n    }))), props.showTooltip ? React.createElement(Tooltip, this.state.tooltip) : null);\n  }\n});","map":{"version":3,"sources":["/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/node_modules/rd3/build/cjs/scatterchart/ScatterChart.js"],"names":["PropTypes","require","React","createReactClass","_require","Chart","XAxis","YAxis","Tooltip","DataSeries","utils","_require2","CartesianChartPropsMixin","DefaultAccessorsMixin","ViewBoxMixin","TooltipMixin","module","exports","displayName","propTypes","circleRadius","number","className","string","hoverAnimation","bool","margins","object","xAxisClassName","xAxisStrokeWidth","yAxisClassName","yAxisStrokeWidth","mixins","getDefaultProps","top","right","bottom","left","_calculateScales","calculateScales","render","props","data","length","_getDimensions","getDimensions","innerWidth","innerHeight","trans","svgMargins","yOrient","getYOrient","domain","flattenedData","flattenData","xAccessor","yAccessor","allValues","xValues","yValues","scales","x","y","xScale","yScale","createElement","onMouseLeave","colors","colorAccessor","height","legend","sideOffset","title","viewBox","getViewBox","width","shouldUpdate","state","changeState","transform","horizontalChart","horizontal","stroke","axesColor","strokeWidth","toString","tickFormatting","xAxisFormatter","tickStroke","xAxisTickStroke","tickTextStroke","xAxisTickTextStroke","xAxisLabel","xAxisLabelOffset","xAxisOffset","xAxisTickInterval","xAxisTickValues","xOrient","gridVertical","gridVerticalStroke","gridVerticalStrokeWidth","gridVerticalStrokeDash","yAxisFormatter","yAxisTickStroke","yAxisTickTextStroke","yAxisLabel","yAxisLabelOffset","yAxisOffset","yAxisTickValues","yAxisTickCount","gridHorizontal","gridHorizontalStroke","gridHorizontalStrokeWidth","gridHorizontalStrokeDash","coord","onMouseOver","showTooltip","tooltip"],"mappings":"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","sourcesContent":["'use strict';\n\nvar PropTypes = require('prop-types');\nvar React = require('react');\nvar createReactClass = require('create-react-class');\n\nvar _require = require('../common');\n\nvar Chart = _require.Chart;\nvar XAxis = _require.XAxis;\nvar YAxis = _require.YAxis;\nvar Tooltip = _require.Tooltip;\n\nvar DataSeries = require('./DataSeries');\nvar utils = require('../utils');\n\nvar _require2 = require('../mixins');\n\nvar CartesianChartPropsMixin = _require2.CartesianChartPropsMixin;\nvar DefaultAccessorsMixin = _require2.DefaultAccessorsMixin;\nvar ViewBoxMixin = _require2.ViewBoxMixin;\nvar TooltipMixin = _require2.TooltipMixin;\n\n\nmodule.exports = createReactClass({\n\n  displayName: 'ScatterChart',\n\n  propTypes: {\n    circleRadius: PropTypes.number,\n    className: PropTypes.string,\n    hoverAnimation: PropTypes.bool,\n    margins: PropTypes.object,\n    xAxisClassName: PropTypes.string,\n    xAxisStrokeWidth: PropTypes.number,\n    yAxisClassName: PropTypes.string,\n    yAxisStrokeWidth: PropTypes.number\n  },\n\n  mixins: [CartesianChartPropsMixin, DefaultAccessorsMixin, ViewBoxMixin, TooltipMixin],\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      circleRadius: 3,\n      className: 'rd3-scatterchart',\n      hoverAnimation: true,\n      margins: { top: 10, right: 20, bottom: 50, left: 45 },\n      xAxisClassName: 'rd3-scatterchart-xaxis',\n      xAxisStrokeWidth: 1,\n      yAxisClassName: 'rd3-scatterchart-yaxis',\n      yAxisStrokeWidth: 1\n    };\n  },\n\n\n  _calculateScales: utils.calculateScales,\n\n  render: function render() {\n    var props = this.props;\n    var data = props.data;\n\n    if (!data || data.length < 1) {\n      return null;\n    }\n\n    var _getDimensions = this.getDimensions();\n\n    var innerWidth = _getDimensions.innerWidth;\n    var innerHeight = _getDimensions.innerHeight;\n    var trans = _getDimensions.trans;\n    var svgMargins = _getDimensions.svgMargins;\n\n    var yOrient = this.getYOrient();\n    var domain = props.domain || {};\n\n    // Returns an object of flattened allValues, xValues, and yValues\n    var flattenedData = utils.flattenData(data, props.xAccessor, props.yAccessor);\n\n    var allValues = flattenedData.allValues;\n    var xValues = flattenedData.xValues;\n    var yValues = flattenedData.yValues;\n\n    var scales = this._calculateScales(innerWidth, innerHeight, xValues, yValues, domain.x, domain.y);\n    var xScale = scales.xScale;\n    var yScale = scales.yScale;\n\n    return React.createElement(\n      'span',\n      { onMouseLeave: this.onMouseLeave },\n      React.createElement(\n        Chart,\n        {\n          colors: props.colors,\n          colorAccessor: props.colorAccessor,\n          data: data,\n          height: props.height,\n          legend: props.legend,\n          sideOffset: props.sideOffset,\n          margins: props.margins,\n          title: props.title,\n          viewBox: this.getViewBox(),\n          width: props.width,\n          shouldUpdate: !this.state.changeState\n        },\n        React.createElement(\n          'g',\n          {\n            className: props.className,\n            transform: trans\n          },\n          React.createElement(XAxis, {\n            data: data,\n            height: innerHeight,\n            horizontalChart: props.horizontal,\n            margins: svgMargins,\n            stroke: props.axesColor,\n            strokeWidth: props.xAxisStrokeWidth.toString(),\n            tickFormatting: props.xAxisFormatter,\n            tickStroke: props.xAxisTickStroke,\n            tickTextStroke: props.xAxisTickTextStroke,\n            width: innerWidth,\n            xAxisClassName: props.xAxisClassName,\n            xAxisLabel: props.xAxisLabel,\n            xAxisLabelOffset: props.xAxisLabelOffset,\n            xAxisOffset: props.xAxisOffset,\n            xAxisTickInterval: props.xAxisTickInterval,\n            xAxisTickValues: props.xAxisTickValues,\n            xOrient: props.xOrient,\n            yOrient: yOrient,\n            xScale: xScale,\n            gridVertical: props.gridVertical,\n            gridVerticalStroke: props.gridVerticalStroke,\n            gridVerticalStrokeWidth: props.gridVerticalStrokeWidth,\n            gridVerticalStrokeDash: props.gridVerticalStrokeDash\n          }),\n          React.createElement(YAxis, {\n            data: data,\n            width: innerWidth,\n            height: innerHeight,\n            horizontalChart: props.horizontal,\n            margins: svgMargins,\n            stroke: props.axesColor,\n            strokeWidth: props.yAxisStrokeWidth.toString(),\n            tickFormatting: props.yAxisFormatter,\n            tickStroke: props.yAxisTickStroke,\n            tickTextStroke: props.yAxisTickTextStroke,\n            yAxisClassName: props.yAxisClassName,\n            yAxisLabel: props.yAxisLabel,\n            yAxisLabelOffset: props.yAxisLabelOffset,\n            yAxisOffset: props.yAxisOffset,\n            yAxisTickValues: props.yAxisTickValues,\n            yAxisTickCount: props.yAxisTickCount,\n            yScale: yScale,\n            xOrient: props.xOrient,\n            yOrient: yOrient,\n            gridHorizontal: props.gridHorizontal,\n            gridHorizontalStroke: props.gridHorizontalStroke,\n            gridHorizontalStrokeWidth: props.gridHorizontalStrokeWidth,\n            gridHorizontalStrokeDash: props.gridHorizontalStrokeDash\n          }),\n          React.createElement(DataSeries, {\n            circleRadius: props.circleRadius,\n            colors: props.colors,\n            colorAccessor: props.colorAccessor,\n            data: allValues,\n            height: innerHeight,\n            hoverAnimation: props.hoverAnimation,\n            width: innerWidth,\n            xAccessor: function xAccessor(coord) {\n              return coord.x;\n            },\n            xScale: xScale,\n            yAccessor: function yAccessor(coord) {\n              return coord.y;\n            },\n            yScale: yScale,\n            onMouseOver: this.onMouseOver\n          })\n        )\n      ),\n      props.showTooltip ? React.createElement(Tooltip, this.state.tooltip) : null\n    );\n  }\n});"]},"metadata":{},"sourceType":"script"}