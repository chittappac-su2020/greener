{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Services/Garbage.js\";\nimport React from 'react';\nimport './Services.css';\nimport PropTypes from \"prop-types\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { connect } from \"react-redux\";\nimport { Alert } from \"react-bootstrap\";\nimport { submitGarbageData, sendMail } from \"../../actions/garbageActions\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nconst mapStyles = {\n  width: '80%',\n  height: '80%',\n  marginLeft: '-15px'\n};\n\nclass Garbage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.buttonSet = type => {\n      if (type === \"pickup\") {\n        return React.createElement(\"div\", {\n          class: \"rGroup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"11AM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"11AM\"), React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"3PM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \"3PM\"));\n      } else if (type === \"dropoff\") {\n        return React.createElement(\"div\", {\n          class: \"rGroup\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"10AM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"10AM\"), React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"3PM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"3PM\"), React.createElement(\"button\", {\n          type: \"button\",\n          class: \"btn btn-lg btn-danger button-spacing\",\n          value: \"7PM\",\n          onClick: this.handleTimeChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"7PM\"));\n      }\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.wasteType != \"\" && this.state.weight != \"\" && this.state.weight > 0 && this.state.time != \"\" && this.state.pickType != \"\") {\n        const gData = {\n          userid: this.props.auth.user.id,\n          wasteType: this.state.wasteType,\n          weight: this.state.weight\n        };\n        const mData = {\n          usermail: this.props.auth.user.email,\n          wasteType: this.state.wasteType,\n          weight: this.state.weight,\n          pickType: this.state.pickType,\n          time: this.state.time\n        };\n        this.props.sendMail(mData);\n        this.props.submitGarbageData(gData);\n        this.setState({\n          wasteType: '',\n          weight: '',\n          alertS: true\n        });\n      } else {\n        console.log(this.props.auth);\n        this.setState({\n          alertF: true\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      let formErrors = this.state.formErrors;\n\n      switch (name) {\n        case \"wasteType\":\n          //formErrors.month =  value.length > 0 ? \"\" : \"Waste type cannot be empty\";\n          this.setState({\n            wasteType: event.target.value\n          });\n          break;\n\n        case \"weight\":\n          // formErrors.year = value.length > 0 ? \"\" : \"Weight cannot be empty\";\n          // if(value.length == 0){\n          //   document.getElementById(\"inputY\").style.borderColor = \"red\";\n          // }else {\n          //   document.getElementById(\"inputY\").style.borderColor = \"\";\n          // }\n          this.setState({\n            weight: event.target.value\n          });\n          break;\n\n        default:\n          break;\n      } //this.setState({formErrors, [name]: value});\n\n    };\n\n    this.closeAlertS = () => {\n      this.setState({\n        alertS: false\n      });\n    };\n\n    this.closeAlertF = () => {\n      this.setState({\n        alertF: false\n      });\n    };\n\n    this.state = {\n      userid: this.props.auth.user.id,\n      wasteType: '',\n      pickType: '',\n      weight: '',\n      time: '',\n      alertS: false,\n      alertF: false,\n      stores: [{\n        latitude: 42.3367,\n        longitude: -71.0875\n      }, {\n        latitude: 42.3375534,\n        longitude: -71.0923795\n      }, {\n        latitude: 442.3375534,\n        longitude: -71.0923795\n      }, {\n        latitude: 42.3441765,\n        longitude: -71.0907051\n      }, {\n        latitude: 42.3425868,\n        longitude: -71.1351013\n      }, {\n        latitude: 42.3312538,\n        longitude: -71.1234369\n      }, {\n        latitude: 42.3436572,\n        longitude: -71.0567736\n      }]\n    };\n    this.handleChangeWaste = this.handleChangeWaste.bind(this);\n    this.handleChangeType = this.handleChangeType.bind(this);\n    this.handleChangeWeight = this.handleChangeWeight.bind(this);\n    this.handleTimeChange = this.handleTimeChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  handleTimeChange(event) {\n    this.setState({\n      time: event.target.value\n    });\n    document.getElementById(\"time\").innerHTML = \"Pickup/Drop time set to \" + event.target.value;\n  }\n\n  handleChangeWaste(event) {\n    this.setState({\n      wasteType: event.target.value\n    });\n  }\n\n  handleChangeType(event) {\n    this.setState({\n      pickType: event.target.value\n    });\n    document.getElementById(\"time\").innerHTML = \"\";\n  }\n\n  handleChangeWeight(event) {\n    this.setState({\n      weight: event.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      class: \"bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.alertS ? React.createElement(Alert, {\n      variant: \"success\",\n      onClose: () => this.closeAlertS(),\n      dismissible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Request submitted successfully.\") : '', this.state.alertF ? React.createElement(Alert, {\n      variant: \"danger\",\n      onClose: () => this.closeAlertF(),\n      dismissible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Please all fields correctly\") : '', React.createElement(\"div\", {\n      class: \"container\",\n      id: \"backgroundImg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"plastic\",\n      name: \"wasteType\",\n      value: \"Plastic\",\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      class: \"metal\",\n      name: \"wasteType\",\n      value: \"Metal\",\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      class: \"paper\",\n      name: \"wasteType\",\n      value: \"Paper\",\n      onClick: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group gForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      class: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Waste Type\"), React.createElement(\"div\", {\n      class: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      class: \"form-control\",\n      id: \"inputWatt\",\n      value: this.state.wasteType,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      class: \"col-sm-2 col-form-label weightClass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Approx. weight (kg)\"), React.createElement(\"div\", {\n      class: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      name: \"weight\",\n      class: \"form-control\",\n      id: \"inputWatt\",\n      onChange: this.handleChange,\n      min: \"1\",\n      max: \"20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"rGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-check form-check-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"form-check-input\",\n      type: \"radio\",\n      name: \"inlineRadioOptions\",\n      id: \"inlineRadio1\",\n      value: \"pickup\",\n      onClick: this.handleChangeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"form-check-label\",\n      for: \"inlineRadio1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Pick-Up\")), React.createElement(\"div\", {\n      class: \"form-check form-check-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      class: \"form-check-input\",\n      type: \"radio\",\n      name: \"inlineRadioOptions\",\n      id: \"inlineRadio2\",\n      value: \"dropoff\",\n      onClick: this.handleChangeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      class: \"form-check-label\",\n      for: \"inlineRadio2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Drop-Off\"))), this.buttonSet(this.state.pickType), React.createElement(\"div\", {\n      id: \"time\",\n      class: \"rGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      id: \"btnSub\",\n      type: \"button\",\n      class: \"btn btn-success\",\n      \"data-toggle\": \"alert\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      class: \"dropStore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Our Drop Off store location\"), React.createElement(Map, {\n      google: this.props.google,\n      zoom: 14,\n      style: mapStyles,\n      initialCenter: {\n        lat: 42.3367,\n        lng: -71.0875\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.stores.map((store, index) => React.createElement(Marker, {\n      key: index,\n      id: index,\n      position: {\n        lat: store.latitude,\n        lng: store.longitude\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })))));\n  }\n\n}\n\n;\nGarbage.propTypes = {\n  submitGarbageData: PropTypes.func.isRequired,\n  sendMail: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  submitGarbageData,\n  sendMail,\n  logoutUser\n})(GoogleApiWrapper({\n  apiKey: \"AIzaSyDiqjm-md1hFlBudX6E31MQiCWZNsqPgAA\"\n})(Garbage));","map":{"version":3,"sources":["/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Services/Garbage.js"],"names":["React","PropTypes","logoutUser","connect","Alert","submitGarbageData","sendMail","Map","GoogleApiWrapper","Marker","mapStyles","width","height","marginLeft","Garbage","Component","constructor","props","buttonSet","type","handleTimeChange","onSubmit","e","preventDefault","state","wasteType","weight","time","pickType","gData","userid","auth","user","id","mData","usermail","email","setState","alertS","console","log","alertF","handleChange","event","target","name","value","formErrors","closeAlertS","closeAlertF","stores","latitude","longitude","handleChangeWaste","bind","handleChangeType","handleChangeWeight","document","getElementById","innerHTML","render","google","lat","lng","map","store","index","propTypes","func","isRequired","object","mapStateToProps","apiKey"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,QAAoB,iBAApB;AACA,SAASC,iBAAT,EAA4BC,QAA5B,QAA4C,8BAA5C;AACA,SAASC,GAAT,EAAcC,gBAAd,EAAgCC,MAAhC,QAA8C,mBAA9C;AACA,MAAMC,SAAS,GAAG;AACdC,EAAAA,KAAK,EAAE,KADO;AAEdC,EAAAA,MAAM,EAAE,KAFM;AAGdC,EAAAA,UAAU,EAAE;AAHE,CAAlB;;AAKA,MAAMC,OAAN,SAAsBd,KAAK,CAACe,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0BjBC,SA1BiB,GA0BJC,IAAD,IAAU;AACpB,UAAGA,IAAI,KAAK,QAAZ,EAAsB;AAClB,eACI;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,sCAA5B;AAAmE,UAAA,KAAK,EAAC,MAAzE;AAAgF,UAAA,OAAO,EAAE,KAAKC,gBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAEA;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,sCAA5B;AAAmE,UAAA,KAAK,EAAC,KAAzE;AAA+E,UAAA,OAAO,EAAE,KAAKA,gBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,CADJ;AAMH,OAPD,MAOO,IAAGD,IAAI,KAAK,SAAZ,EAAuB;AAC1B,eACA;AAAK,UAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,sCAA5B;AAAmE,UAAA,KAAK,EAAC,MAAzE;AAAgF,UAAA,OAAO,EAAE,KAAKC,gBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,sCAA5B;AAAmE,UAAA,KAAK,EAAC,KAAzE;AAA+E,UAAA,OAAO,EAAE,KAAKA,gBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,sCAA5B;AAAmE,UAAA,KAAK,EAAC,KAAzE;AAA+E,UAAA,OAAO,EAAE,KAAKA,gBAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CADA;AAOH;AACJ,KA3CkB;;AAAA,SA4CnBC,QA5CmB,GA4CPC,CAAD,IAAO;AACdA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAG,KAAKC,KAAL,CAAWC,SAAX,IAAsB,EAAtB,IAA4B,KAAKD,KAAL,CAAWE,MAAX,IAAoB,EAAhD,IAAsD,KAAKF,KAAL,CAAWE,MAAX,GAAmB,CAAzE,IAA8E,KAAKF,KAAL,CAAWG,IAAX,IAAkB,EAAhG,IAAsG,KAAKH,KAAL,CAAWI,QAAX,IAAsB,EAA/H,EAAmI;AACjI,cAAMC,KAAK,GAAG;AACZC,UAAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,IAAX,CAAgBC,IAAhB,CAAqBC,EADjB;AAEZR,UAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAFV;AAGZC,UAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAHP,SAAd;AAKA,cAAMQ,KAAK,GAAG;AACZC,UAAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWc,IAAX,CAAgBC,IAAhB,CAAqBI,KADnB;AAEZX,UAAAA,SAAS,EAAE,KAAKD,KAAL,CAAWC,SAFV;AAGZC,UAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE,MAHP;AAIZE,UAAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWI,QAJT;AAKZD,UAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AALL,SAAd;AAOA,aAAKV,KAAL,CAAWX,QAAX,CAAoB4B,KAApB;AACA,aAAKjB,KAAL,CAAWZ,iBAAX,CAA6BwB,KAA7B;AACA,aAAKQ,QAAL,CAAc;AAACZ,UAAAA,SAAS,EAAE,EAAZ;AAAgBC,UAAAA,MAAM,EAAE,EAAxB;AAA4BY,UAAAA,MAAM,EAAE;AAApC,SAAd;AACD,OAhBD,MAgBO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWc,IAAvB;AACA,aAAKM,QAAL,CAAc;AAACI,UAAAA,MAAM,EAAE;AAAT,SAAd;AACH;AACF,KAlEgB;;AAAA,SAmEnBC,YAnEmB,GAmEHC,KAAD,IAAW;AAAA,4BACAA,KAAK,CAACC,MADN;AAAA,YACfC,IADe,iBACfA,IADe;AAAA,YACTC,KADS,iBACTA,KADS;AAEtB,UAAIC,UAAU,GAAG,KAAKvB,KAAL,CAAWuB,UAA5B;;AAEA,cAAOF,IAAP;AACE,aAAK,WAAL;AACE;AACA,eAAKR,QAAL,CAAc;AAACZ,YAAAA,SAAS,EAAEkB,KAAK,CAACC,MAAN,CAAaE;AAAzB,WAAd;AACA;;AACF,aAAK,QAAL;AACE;AACA;AACA;AACA;AACA;AACA;AACA,eAAKT,QAAL,CAAc;AAACX,YAAAA,MAAM,EAAEiB,KAAK,CAACC,MAAN,CAAaE;AAAtB,WAAd;AACA;;AACF;AACE;AAfJ,OAJsB,CAqBtB;;AACD,KAzFgB;;AAAA,SAwGjBE,WAxGiB,GAwGH,MAAM;AAClB,WAAKX,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KA1GgB;;AAAA,SA2GjBW,WA3GiB,GA2GH,MAAM;AAClB,WAAKZ,QAAL,CAAc;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,KA7GgB;;AAEf,SAAKjB,KAAL,GAAa;AACbM,MAAAA,MAAM,EAAE,KAAKb,KAAL,CAAWc,IAAX,CAAgBC,IAAhB,CAAqBC,EADhB;AACmBR,MAAAA,SAAS,EAAE,EAD9B;AAEbG,MAAAA,QAAQ,EAAE,EAFG;AAGbF,MAAAA,MAAM,EAAE,EAHK;AAIbC,MAAAA,IAAI,EAAE,EAJO;AAKbW,MAAAA,MAAM,EAAE,KALK;AAMbG,MAAAA,MAAM,EAAE,KANK;AAObS,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,QAAQ,EAAE,OAAZ;AAAqBC,QAAAA,SAAS,EAAG,CAAC;AAAlC,OAAD,EACJ;AAACD,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,SAAS,EAAE,CAAC;AAAnC,OADI,EAEJ;AAACD,QAAAA,QAAQ,EAAE,WAAX;AAAwBC,QAAAA,SAAS,EAAE,CAAC;AAApC,OAFI,EAGJ;AAACD,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,SAAS,EAAE,CAAC;AAAnC,OAHI,EAIJ;AAACD,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,SAAS,EAAE,CAAC;AAAnC,OAJI,EAKJ;AAACD,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,SAAS,EAAE,CAAC;AAAnC,OALI,EAMJ;AAACD,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,SAAS,EAAE,CAAC;AAAnC,OANI;AAPK,KAAb;AAiBA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKlC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBkC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKZ,YAAL,GAAoB,KAAKA,YAAL,CAAkBY,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKjC,QAAL,GAAgB,KAAKA,QAAL,CAAciC,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAiEHlC,EAAAA,gBAAgB,CAACuB,KAAD,EAAQ;AACxB,SAAKN,QAAL,CAAc;AAACV,MAAAA,IAAI,EAAEgB,KAAK,CAACC,MAAN,CAAaE;AAApB,KAAd;AACAW,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4C,6BAA6BhB,KAAK,CAACC,MAAN,CAAaE,KAAtF;AACG;;AACDO,EAAAA,iBAAiB,CAACV,KAAD,EAAQ;AACvB,SAAKN,QAAL,CAAc;AAACZ,MAAAA,SAAS,EAAEkB,KAAK,CAACC,MAAN,CAAaE;AAAzB,KAAd;AACD;;AACDS,EAAAA,gBAAgB,CAACZ,KAAD,EAAQ;AACtB,SAAKN,QAAL,CAAc;AAACT,MAAAA,QAAQ,EAAEe,KAAK,CAACC,MAAN,CAAaE;AAAxB,KAAd;AACAW,IAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4C,EAA5C;AACD;;AACDH,EAAAA,kBAAkB,CAACb,KAAD,EAAQ;AACxB,SAAKN,QAAL,CAAc;AAACX,MAAAA,MAAM,EAAEiB,KAAK,CAACC,MAAN,CAAaE;AAAtB,KAAd;AACD;;AAOHc,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKpC,KAAL,CAAWc,MAAX,GACD,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,SAAf;AAAyB,MAAA,OAAO,EAAE,MAAM,KAAKU,WAAL,EAAxC;AAA4D,MAAA,WAAW,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADC,GAEA,EAHN,EAIM,KAAKxB,KAAL,CAAWiB,MAAX,GACD,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAE,MAAM,KAAKQ,WAAL,EAAvC;AAA2D,MAAA,WAAW,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADC,GAEA,EANN,EAOA;AAAK,MAAA,KAAK,EAAC,WAAX;AAAuB,MAAA,EAAE,EAAC,eAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACZ;AAAO,MAAA,KAAK,EAAC,SAAb;AAAuB,MAAA,IAAI,EAAC,WAA5B;AAAwC,MAAA,KAAK,EAAC,SAA9C;AAAwD,MAAA,OAAO,EAAE,KAAKP,YAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY,EAEV;AAAO,MAAA,KAAK,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,WAA1B;AAAsC,MAAA,KAAK,EAAC,OAA5C;AAAoD,MAAA,OAAO,EAAE,KAAKA,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFU,EAGV;AAAO,MAAA,KAAK,EAAC,OAAb;AAAqB,MAAA,IAAI,EAAC,WAA1B;AAAsC,MAAA,KAAK,EAAC,OAA5C;AAAoD,MAAA,OAAO,EAAE,KAAKA,YAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHU,EAKV;AAAK,MAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,KAAK,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAC,cAAzB;AAAwC,MAAA,EAAE,EAAC,WAA3C;AAAuD,MAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWC,SAAzE;AAAoF,MAAA,QAAQ,MAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAKM;AAAO,MAAA,KAAK,EAAC,qCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALN,EAME;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,QAA1B;AAAkC,MAAA,KAAK,EAAC,cAAxC;AAAuD,MAAA,EAAE,EAAC,WAA1D;AAAsE,MAAA,QAAQ,EAAE,KAAKiB,YAArF;AAAmG,MAAA,GAAG,EAAC,GAAvG;AAA2G,MAAA,GAAG,EAAC,IAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EASM;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAC,8BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN;AAAO,MAAA,KAAK,EAAC,kBAAb;AAAgC,MAAA,IAAI,EAAC,OAArC;AAA6C,MAAA,IAAI,EAAC,oBAAlD;AAAuE,MAAA,EAAE,EAAC,cAA1E;AAAyF,MAAA,KAAK,EAAC,QAA/F;AAAwG,MAAA,OAAO,EAAE,KAAKa,gBAAtH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADM,EAEN;AAAO,MAAA,KAAK,EAAC,kBAAb;AAAgC,MAAA,GAAG,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFM,CADA,EAKR;AAAK,MAAA,KAAK,EAAC,8BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,KAAK,EAAC,kBAAb;AAAgC,MAAA,IAAI,EAAC,OAArC;AAA6C,MAAA,IAAI,EAAC,oBAAlD;AAAuE,MAAA,EAAE,EAAC,cAA1E;AAAyF,MAAA,KAAK,EAAC,SAA/F;AAAyG,MAAA,OAAO,EAAE,KAAKA,gBAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,KAAK,EAAC,kBAAb;AAAgC,MAAA,GAAG,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CALQ,CATN,EAmBD,KAAKrC,SAAL,CAAe,KAAKM,KAAL,CAAWI,QAA1B,CAnBC,EAoBF;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,KAAK,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBE,CALU,EA2BJ;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAkC,MAAA,KAAK,EAAC,iBAAxC;AAA0D,qBAAY,OAAtE;AAA8E,MAAA,OAAO,EAAE,KAAKP,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA3BI,EA4BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BI,EA6BJ;AAAI,MAAA,KAAK,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCA7BI,EA8BJ,oBAAC,GAAD;AACE,MAAA,MAAM,EAAE,KAAKJ,KAAL,CAAW4C,MADrB;AAEE,MAAA,IAAI,EAAE,EAFR;AAGE,MAAA,KAAK,EAAEnD,SAHT;AAIE,MAAA,aAAa,EAAE;AAAEoD,QAAAA,GAAG,EAAE,OAAP;AAAgBC,QAAAA,GAAG,EAAG,CAAC;AAAvB,OAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOa,KAAKvC,KAAL,CAAW0B,MAAX,CAAkBc,GAAlB,CAAsB,CAACC,KAAD,EAAQC,KAAR,KACnB,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,KAAb;AAAoB,MAAA,EAAE,EAAEA,KAAxB;AAA+B,MAAA,QAAQ,EAAE;AACrCJ,QAAAA,GAAG,EAAEG,KAAK,CAACd,QAD0B;AAErCY,QAAAA,GAAG,EAAEE,KAAK,CAACb;AAF0B,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAPb,CA9BI,CAPA,CADJ;AA0DH;;AA1KiC;;AA2KrC;AAEDtC,OAAO,CAACqD,SAAR,GAAoB;AAChB9D,EAAAA,iBAAiB,EAAEJ,SAAS,CAACmE,IAAV,CAAeC,UADlB;AAEhB/D,EAAAA,QAAQ,EAAEL,SAAS,CAACmE,IAAV,CAAeC,UAFT;AAGhBnE,EAAAA,UAAU,EAAED,SAAS,CAACmE,IAAV,CAAeC,UAHX;AAIhBtC,EAAAA,IAAI,EAAE9B,SAAS,CAACqE,MAAV,CAAiBD;AAJP,CAApB;;AAME,MAAME,eAAe,GAAG/C,KAAK,KAAK;AAChCO,EAAAA,IAAI,EAAEP,KAAK,CAACO;AADoB,CAAL,CAA7B;;AAGA,eAAe5B,OAAO,CACpBoE,eADoB,EAEpB;AAAElE,EAAAA,iBAAF;AAAqBC,EAAAA,QAArB;AAA+BJ,EAAAA;AAA/B,CAFoB,CAAP,CAIbM,gBAAgB,CAAC;AACbgE,EAAAA,MAAM,EAAG;AADI,CAAD,CAAhB,CAEG1D,OAFH,CAJa,CAAf","sourcesContent":["import React from 'react';\nimport './Services.css';\nimport PropTypes from \"prop-types\";\nimport { logoutUser } from \"../../actions/authActions\";\nimport { connect } from \"react-redux\";\nimport {Alert} from \"react-bootstrap\";\nimport { submitGarbageData, sendMail } from \"../../actions/garbageActions\";\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nconst mapStyles = {\n    width: '80%',\n    height: '80%',\n    marginLeft: '-15px'\n  };\nclass Garbage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        userid: this.props.auth.user.id,wasteType: '',\n        pickType: '',\n        weight: '',\n        time: '',\n        alertS: false,\n        alertF: false,\n        stores: [{ latitude: 42.3367, longitude:  -71.0875},\n            {latitude: 42.3375534, longitude: -71.0923795},\n            {latitude: 442.3375534, longitude: -71.0923795},\n            {latitude: 42.3441765, longitude: -71.0907051},\n            {latitude: 42.3425868, longitude: -71.1351013},\n            {latitude: 42.3312538, longitude: -71.1234369},\n            {latitude: 42.3436572, longitude: -71.0567736}\n        ]\n    };\n    \n        this.handleChangeWaste = this.handleChangeWaste.bind(this);\n        this.handleChangeType = this.handleChangeType.bind(this);\n        this.handleChangeWeight = this.handleChangeWeight.bind(this);\n        this.handleTimeChange = this.handleTimeChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n      }\n      buttonSet = (type) => {\n        if(type === \"pickup\") {\n            return (\n                <div class=\"rGroup\">\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"11AM\" onClick={this.handleTimeChange}>11AM</button>\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"3PM\" onClick={this.handleTimeChange}>3PM</button>\n                </div>\n            )\n        } else if(type === \"dropoff\") {\n            return (\n            <div class=\"rGroup\">\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"10AM\" onClick={this.handleTimeChange}>10AM</button>\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"3PM\" onClick={this.handleTimeChange}>3PM</button>\n                <button type=\"button\" class=\"btn btn-lg btn-danger button-spacing\" value=\"7PM\" onClick={this.handleTimeChange}>7PM</button>\n                </div>\n            )\n        }\n    }\n    onSubmit = (e) => {\n        e.preventDefault();\n        if(this.state.wasteType!=\"\" && this.state.weight !=\"\" && this.state.weight >0 && this.state.time !=\"\" && this.state.pickType !=\"\") {\n          const gData = {\n            userid: this.props.auth.user.id,\n            wasteType: this.state.wasteType,\n            weight: this.state.weight\n          };\n          const mData = {\n            usermail: this.props.auth.user.email,\n            wasteType: this.state.wasteType,\n            weight: this.state.weight,\n            pickType: this.state.pickType,\n            time: this.state.time\n          };\n          this.props.sendMail(mData);\n          this.props.submitGarbageData(gData);\n          this.setState({wasteType: '', weight: '', alertS: true});\n        } else {\n            console.log(this.props.auth);\n            this.setState({alertF: true});\n        }\n      }\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        let formErrors = this.state.formErrors;\n    \n        switch(name) {\n          case \"wasteType\":\n            //formErrors.month =  value.length > 0 ? \"\" : \"Waste type cannot be empty\";\n            this.setState({wasteType: event.target.value})\n            break;\n          case \"weight\":\n            // formErrors.year = value.length > 0 ? \"\" : \"Weight cannot be empty\";\n            // if(value.length == 0){\n            //   document.getElementById(\"inputY\").style.borderColor = \"red\";\n            // }else {\n            //   document.getElementById(\"inputY\").style.borderColor = \"\";\n            // }\n            this.setState({weight: event.target.value})\n            break;\n          default:\n            break;\n        }\n        //this.setState({formErrors, [name]: value});\n      };\n    handleTimeChange(event) {\n    this.setState({time: event.target.value});\n    document.getElementById(\"time\").innerHTML = \"Pickup/Drop time set to \" + event.target.value;\n      }\n      handleChangeWaste(event) {\n        this.setState({wasteType: event.target.value});\n      }\n      handleChangeType(event) {\n        this.setState({pickType: event.target.value});\n        document.getElementById(\"time\").innerHTML = \"\";\n      }\n      handleChangeWeight(event) {\n        this.setState({weight: event.target.value});\n      }\n      closeAlertS = () => {\n        this.setState({ alertS: false });\n      }\n      closeAlertF = () => {\n        this.setState({ alertF: false });\n      }\n    render() {\n        return (\n            <div class=\"bg\">\n                {(this.state.alertS ? \n                (<Alert variant=\"success\" onClose={() => this.closeAlertS()} dismissible>Request submitted successfully.</Alert>) \n                : '')}\n                {(this.state.alertF ? \n                (<Alert variant=\"danger\" onClose={() => this.closeAlertF()} dismissible>Please all fields correctly</Alert>) \n                : '')}\n            <div class=\"container\" id=\"backgroundImg\">\n<input class=\"plastic\" name=\"wasteType\" value=\"Plastic\" onClick={this.handleChange}></input>\n  <input class=\"metal\" name=\"wasteType\" value=\"Metal\" onClick={this.handleChange}></input>\n  <input class=\"paper\" name=\"wasteType\" value=\"Paper\" onClick={this.handleChange}></input>\n\n  <div class=\"form-group gForm\">\n    <label class=\"col-sm-2 col-form-label\">Waste Type</label>\n    <div class=\"col-sm-10\">\n      <input type=\"text\" class=\"form-control\" id=\"inputWatt\" value={this.state.wasteType} disabled/>\n        </div>\n        <label class=\"col-sm-2 col-form-label weightClass\">Approx. weight (kg)</label>\n    <div class=\"col-sm-10\">\n      <input type=\"number\" name=\"weight\"class=\"form-control\" id=\"inputWatt\" onChange={this.handleChange} min=\"1\" max=\"20\"/>\n        </div>\n        <div class=\"rGroup\">\n        <div class=\"form-check form-check-inline\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"pickup\" onClick={this.handleChangeType}/>\n  <label class=\"form-check-label\" for=\"inlineRadio1\">Pick-Up</label>\n</div>\n<div class=\"form-check form-check-inline\">\n  <input class=\"form-check-input\" type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"dropoff\" onClick={this.handleChangeType}/>\n  <label class=\"form-check-label\" for=\"inlineRadio2\">Drop-Off</label>\n</div>\n</div>\n{this.buttonSet(this.state.pickType)}\n<div id=\"time\" class=\"rGroup\"></div>\n        </div>\n        <button id=\"btnSub\" type=\"button\" class=\"btn btn-success\" data-toggle=\"alert\" onClick={this.onSubmit}>Submit</button>\n        <hr></hr>\n        <h3 class=\"dropStore\">Our Drop Off store location</h3>\n        <Map\n          google={this.props.google}\n          zoom={14}\n          style={mapStyles}\n          initialCenter={{ lat: 42.3367, lng:  -71.0875}}\n        >\n            {\n                     this.state.stores.map((store, index) => (\n                        <Marker key={index} id={index} position={{\n                            lat: store.latitude,\n                            lng: store.longitude}} />\n                     ))\n                    \n                    }\n        \n            {/* <Marker position={{ lat: 42.3367, lng:  -71.0875}} /> */}\n        </Map>\n        </div>\n        </div>\n        );\n    }\n};\n\nGarbage.propTypes = {\n    submitGarbageData: PropTypes.func.isRequired,\n    sendMail: PropTypes.func.isRequired,\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n  };\n  const mapStateToProps = state => ({\n    auth: state.auth\n  });\n  export default connect(\n    mapStateToProps,\n    { submitGarbageData, sendMail, logoutUser }\n  )(\n    GoogleApiWrapper({\n        apiKey: (\"AIzaSyDiqjm-md1hFlBudX6E31MQiCWZNsqPgAA\")\n    })(Garbage)\n)"]},"metadata":{},"sourceType":"module"}