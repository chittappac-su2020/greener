{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Products/Orders.js\";\nimport React from 'react';\nimport { Grid, Card, Carousel, Dropdown, Form, Media, Button } from 'react-bootstrap';\nimport img1 from '../../assets/images/dustbin.jpg';\nimport PaypalButton from '../../components/Jobs/pay';\nimport './Products.css';\nimport { submitOrders } from \"../../actions/productsActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { submitProducts } from \"../../actions/productsActions\";\nimport { logoutUser } from \"../../actions/authActions\";\nconst CLIENT = {\n  sandbox: 'AXLG5l9gXCMut3IBoDyqmqKyq0fP5tl4E1V_U0UInnEtNymfLXmNKVrMbDYL0Ehoelv98tYl3t-j-p8R'\n};\nconst ENV = 'sandbox';\n\nclass Orders extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      products: props.location.state.p,\n      ordersData: {\n        user: this.props.auth.user.id,\n        dateCreated: Date.now(),\n        items: [{\n          productID: props.location.state.p._id,\n          productName: props.location.state.p.title,\n          productPrice: props.location.state.p.price,\n          quantity: props.location.state.p.quantity\n        }]\n      }\n    };\n    const products = props.location.state.p;\n    console.log(this.props.auth.user.id);\n  }\n\n  render() {\n    const onSuccess = payment => {\n      console.log('Successful payment!', payment);\n      alert(\"Payment was successfull!\");\n      submitProducts;\n    };\n\n    const onError = error => console.log('Erroneous payment OR failed to load script!', error);\n\n    const onCancel = data => console.log('Cancelled payment!', data);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Review Order\"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row mt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-3 cc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Card.Img, {\n      className: \"img cc\",\n      variant: \"top\",\n      src: process.env.PUBLIC_URL + this.state.products.image1,\n      rounded: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-md-9 cc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"c\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      className: \"text cc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      className: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.products.title), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.products.desc1, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Total : $\", this.state.products.price * this.state.products.quantity, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Quantity: \", this.state.products.quantity)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(PaypalButton, {\n      client: CLIENT,\n      env: ENV,\n      commit: true,\n      currency: 'USD',\n      total: '100',\n      onSuccess: onSuccess,\n      onError: onError,\n      onCancel: onCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))))))));\n  }\n\n}\n\nOrders.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  logoutUser\n})(Orders); //export default Orders;","map":{"version":3,"sources":["/Users/apple/Documents/WebDesign/Greener/final-project/greener-mern/client/src/components/Products/Orders.js"],"names":["React","Grid","Card","Carousel","Dropdown","Form","Media","Button","img1","PaypalButton","submitOrders","PropTypes","connect","submitProducts","logoutUser","CLIENT","sandbox","ENV","Orders","Component","constructor","props","state","products","location","p","ordersData","user","auth","id","dateCreated","Date","now","items","productID","_id","productName","title","productPrice","price","quantity","console","log","render","onSuccess","payment","alert","onError","error","onCancel","data","process","env","PUBLIC_URL","image1","desc1","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid, Card, Carousel, Dropdown, Form, Media, Button } from 'react-bootstrap';\nimport img1 from '../../assets/images/dustbin.jpg'\nimport PaypalButton from '../../components/Jobs/pay';\nimport './Products.css';\nimport { submitOrders } from \"../../actions/productsActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { submitProducts } from \"../../actions/productsActions\";\nimport { logoutUser } from \"../../actions/authActions\";\nconst CLIENT = {\n    sandbox: 'AXLG5l9gXCMut3IBoDyqmqKyq0fP5tl4E1V_U0UInnEtNymfLXmNKVrMbDYL0Ehoelv98tYl3t-j-p8R',\n\n};\nconst ENV = 'sandbox';\n\n\n\nclass Orders extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            products: props.location.state.p,\n            ordersData: {\n                user: this.props.auth.user.id,\n                dateCreated: Date.now(),\n                items: [{\n                    productID: props.location.state.p._id,\n                    productName: props.location.state.p.title,\n                    productPrice: props.location.state.p.price,\n                    quantity: props.location.state.p.quantity\n                }]\n            }\n        }\n        const products = props.location.state.p\n        console.log(this.props.auth.user.id);\n    }\n\n    render() {\n        const onSuccess = (payment) => {\n            console.log('Successful payment!', payment);\n            alert(\"Payment was successfull!\")\n            submitProducts\n        }\n\n        const onError = (error) =>\n            console.log('Erroneous payment OR failed to load script!', error);\n        const onCancel = (data) =>\n            console.log('Cancelled payment!', data);\n\n        return (\n            <div>\n                <h1 className=\"head\">Review Order</h1>\n\n                <div className=\"container\">\n                    <div className=\"row mt-5\">\n                        <div className=\"col-md-3 cc\">\n                            <Card.Img className=\"img cc\" variant=\"top\" src={process.env.PUBLIC_URL + this.state.products.image1} rounded />\n                        </div>\n                        <div className=\"col-md-9 cc\">\n                            <Card className=\"c\">\n                                <Card.Body className=\"text cc\">\n                                    <Card.Title className=\"text\">{this.state.products.title}</Card.Title>\n                                    <Card.Text>\n                                        {this.state.products.desc1}<br />\n                                        <h3>Total : ${this.state.products.price * this.state.products.quantity}\n                                            <p>Quantity: {this.state.products.quantity}</p></h3><br />\n                                        <PaypalButton\n                                            client={CLIENT}\n                                            env={ENV}\n                                            commit={true}\n                                            currency={'USD'}\n                                            total={'100'}\n                                            onSuccess={onSuccess}\n                                            onError={onError}\n                                            onCancel={onCancel}\n                                        />\n                                    </Card.Text>\n                                </Card.Body>\n                            </Card>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nOrders.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n    auth: state.auth\n});\nexport default connect(\n    mapStateToProps,\n    { logoutUser }\n)(Orders);\n\n\n//export default Orders;"]},"metadata":{},"sourceType":"module"}